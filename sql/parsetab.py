
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND AS AVG BETWEEN BY COMMA COUNT DOT FROM IN LP MAX MIN NAME NUMBER OR ORDER RP SELECT SUM WHEREquery : select \n             | LP query RP\n    select : SELECT list FROM table WHERE lst ORDER BY list\n              | SELECT list FROM table WHERE lst\n              | SELECT list FROM table ORDER BY list\n              | SELECT list FROM table\n    table : NAME\n             | LP query RP\n             | NAME AS NAME\n             | table AS NAME\n             | table COMMA table\n    lst : condition\n           | condition AND condition\n           | condition OR condition\n           | NAME BETWEEN NUMBER AND NUMBER\n           | NAME IN LP query RP\n           | NAME '<' agg\n           | NAME '>' agg\n           | agg '>' NUMBER\n           | NAME '=' agg\n           | agg '=' NUMBER\n           | agg '<' NUMBER\n    condition : NAME '>' NUMBER\n                 | NAME '>' agg  \n                 | NAME '<' NUMBER\n                 | NAME '<' agg\n                 | NAME '=' NUMBER\n                 | NAME '=' agg\n                 | NAME '>' NAME\n                 | NAME '<' NAME\n                 | NAME '=' NAME\n                 | list '>' list\n                 | list '<' list\n                 | list '=' list\n                 | list '>' NUMBER\n                 | list '<' NUMBER\n                 | list '=' NUMBER\n    agg : SUM LP NAME RP\n           | AVG LP NAME RP\n           | COUNT LP NAME RP\n           | MIN LP NAME RP \n           | MAX LP NAME RP\n           | COUNT LP '*' RP\n    list : '*'\n            | NAME\n            | NAME DOT NAME \n            | list COMMA list\n            | list AND NAME\n            | list OR NAME        \n            | agg\n    "
    
_lr_action_items = {'LP':([0,3,10,11,12,13,14,16,28,42,68,87,],[3,3,21,22,23,24,25,28,3,28,87,3,]),'SELECT':([0,3,28,87,],[4,4,4,4,]),'$end':([1,2,7,8,9,15,26,27,29,30,31,32,45,46,47,48,49,50,52,53,57,58,59,60,75,76,77,78,79,80,81,83,85,88,89,90,91,92,93,94,95,96,97,98,99,100,106,107,108,109,110,],[0,-1,-44,-45,-50,-2,-6,-7,-47,-48,-49,-46,-38,-39,-40,-43,-41,-42,-4,-12,-10,-11,-9,-8,-5,-32,-35,-33,-36,-34,-37,-13,-14,-30,-17,-25,-29,-18,-23,-31,-20,-27,-19,-21,-22,-3,-24,-26,-28,-15,-16,]),'RP':([2,5,7,8,9,15,26,27,29,30,31,32,33,34,35,36,37,38,44,45,46,47,48,49,50,52,53,57,58,59,60,75,76,77,78,79,80,81,83,85,88,89,90,91,92,93,94,95,96,97,98,99,100,105,106,107,108,109,110,],[-1,15,-44,-45,-50,-2,-6,-7,-47,-48,-49,-46,45,46,47,48,49,50,60,-38,-39,-40,-43,-41,-42,-4,-12,-10,-11,-9,-8,-5,-32,-35,-33,-36,-34,-37,-13,-14,-30,-17,-25,-29,-18,-23,-31,-20,-27,-19,-21,-22,-3,110,-24,-26,-28,-15,-16,]),'*':([4,17,23,39,56,61,62,63,65,66,82,],[7,7,36,7,7,7,7,7,7,7,7,]),'NAME':([4,16,17,18,19,20,21,22,23,24,25,39,41,42,43,56,61,62,63,65,66,69,70,71,82,101,102,103,],[8,27,8,30,31,32,33,34,35,37,38,54,57,27,59,8,8,8,8,84,84,88,91,94,8,91,88,94,]),'SUM':([4,17,39,56,61,62,63,65,66,69,70,71,82,101,102,103,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'AVG':([4,17,39,56,61,62,63,65,66,69,70,71,82,101,102,103,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'COUNT':([4,17,39,56,61,62,63,65,66,69,70,71,82,101,102,103,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'MIN':([4,17,39,56,61,62,63,65,66,69,70,71,82,101,102,103,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'MAX':([4,17,39,56,61,62,63,65,66,69,70,71,82,101,102,103,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'FROM':([6,7,8,9,29,30,31,32,45,46,47,48,49,50,],[16,-44,-45,-50,-47,-48,-49,-46,-38,-39,-40,-43,-41,-42,]),'COMMA':([6,7,8,9,26,27,29,30,31,32,45,46,47,48,49,50,51,54,55,57,58,59,60,75,76,78,80,84,100,],[17,-44,-45,-50,42,-7,17,-48,-49,-46,-38,-39,-40,-43,-41,-42,17,-45,-50,-10,42,-9,-8,17,17,17,17,-45,17,]),'AND':([6,7,8,9,29,30,31,32,45,46,47,48,49,50,51,53,54,55,75,76,77,78,79,80,81,84,86,88,89,90,91,92,93,94,95,96,100,],[18,-44,-45,-50,18,-48,-49,-46,-38,-39,-40,-43,-41,-42,18,65,-45,-50,18,18,-35,18,-36,18,-37,-45,104,-30,-26,-25,-29,-24,-23,-31,-28,-27,18,]),'OR':([6,7,8,9,29,30,31,32,45,46,47,48,49,50,51,53,54,55,75,76,77,78,79,80,81,84,88,89,90,91,92,93,94,95,96,100,],[19,-44,-45,-50,19,-48,-49,-46,-38,-39,-40,-43,-41,-42,19,66,-45,-50,19,19,-35,19,-36,19,-37,-45,-30,-26,-25,-29,-24,-23,-31,-28,-27,19,]),'>':([7,8,9,29,30,31,32,45,46,47,48,49,50,51,54,55,84,],[-44,-45,-50,-47,-48,-49,-46,-38,-39,-40,-43,-41,-42,61,70,72,101,]),'<':([7,8,9,29,30,31,32,45,46,47,48,49,50,51,54,55,84,],[-44,-45,-50,-47,-48,-49,-46,-38,-39,-40,-43,-41,-42,62,69,74,102,]),'=':([7,8,9,29,30,31,32,45,46,47,48,49,50,51,54,55,84,],[-44,-45,-50,-47,-48,-49,-46,-38,-39,-40,-43,-41,-42,63,71,73,103,]),'ORDER':([7,8,9,26,27,29,30,31,32,45,46,47,48,49,50,52,53,57,58,59,60,76,77,78,79,80,81,83,85,88,89,90,91,92,93,94,95,96,97,98,99,106,107,108,109,110,],[-44,-45,-50,40,-7,-47,-48,-49,-46,-38,-39,-40,-43,-41,-42,64,-12,-10,-11,-9,-8,-32,-35,-33,-36,-34,-37,-13,-14,-30,-17,-25,-29,-18,-23,-31,-20,-27,-19,-21,-22,-24,-26,-28,-15,-16,]),'DOT':([8,54,84,],[20,20,20,]),'WHERE':([26,27,57,58,59,60,],[39,-7,-10,-11,-9,-8,]),'AS':([26,27,57,58,59,60,],[41,43,-10,41,-9,-8,]),'BY':([40,64,],[56,82,]),'BETWEEN':([54,],[67,]),'IN':([54,],[68,]),'NUMBER':([61,62,63,67,69,70,71,72,73,74,101,102,103,104,],[77,79,81,86,90,93,96,97,98,99,93,90,96,109,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'query':([0,3,28,87,],[1,5,44,105,]),'select':([0,3,28,87,],[2,2,2,2,]),'list':([4,17,39,56,61,62,63,65,66,82,],[6,29,51,75,76,78,80,51,51,100,]),'agg':([4,17,39,56,61,62,63,65,66,69,70,71,82,101,102,103,],[9,9,55,9,9,9,9,9,9,89,92,95,9,106,107,108,]),'table':([16,42,],[26,58,]),'lst':([39,],[52,]),'condition':([39,65,66,],[53,83,85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> query","S'",1,None,None,None),
  ('query -> select','query',1,'p_query','parser.py',112),
  ('query -> LP query RP','query',3,'p_query','parser.py',113),
  ('select -> SELECT list FROM table WHERE lst ORDER BY list','select',9,'p_select','parser.py',121),
  ('select -> SELECT list FROM table WHERE lst','select',6,'p_select','parser.py',122),
  ('select -> SELECT list FROM table ORDER BY list','select',7,'p_select','parser.py',123),
  ('select -> SELECT list FROM table','select',4,'p_select','parser.py',124),
  ('table -> NAME','table',1,'p_table','parser.py',160),
  ('table -> LP query RP','table',3,'p_table','parser.py',161),
  ('table -> NAME AS NAME','table',3,'p_table','parser.py',162),
  ('table -> table AS NAME','table',3,'p_table','parser.py',163),
  ('table -> table COMMA table','table',3,'p_table','parser.py',164),
  ('lst -> condition','lst',1,'p_lst','parser.py',188),
  ('lst -> condition AND condition','lst',3,'p_lst','parser.py',189),
  ('lst -> condition OR condition','lst',3,'p_lst','parser.py',190),
  ('lst -> NAME BETWEEN NUMBER AND NUMBER','lst',5,'p_lst','parser.py',191),
  ('lst -> NAME IN LP query RP','lst',5,'p_lst','parser.py',192),
  ('lst -> NAME < agg','lst',3,'p_lst','parser.py',193),
  ('lst -> NAME > agg','lst',3,'p_lst','parser.py',194),
  ('lst -> agg > NUMBER','lst',3,'p_lst','parser.py',195),
  ('lst -> NAME = agg','lst',3,'p_lst','parser.py',196),
  ('lst -> agg = NUMBER','lst',3,'p_lst','parser.py',197),
  ('lst -> agg < NUMBER','lst',3,'p_lst','parser.py',198),
  ('condition -> NAME > NUMBER','condition',3,'p_condition','parser.py',246),
  ('condition -> NAME > agg','condition',3,'p_condition','parser.py',247),
  ('condition -> NAME < NUMBER','condition',3,'p_condition','parser.py',248),
  ('condition -> NAME < agg','condition',3,'p_condition','parser.py',249),
  ('condition -> NAME = NUMBER','condition',3,'p_condition','parser.py',250),
  ('condition -> NAME = agg','condition',3,'p_condition','parser.py',251),
  ('condition -> NAME > NAME','condition',3,'p_condition','parser.py',252),
  ('condition -> NAME < NAME','condition',3,'p_condition','parser.py',253),
  ('condition -> NAME = NAME','condition',3,'p_condition','parser.py',254),
  ('condition -> list > list','condition',3,'p_condition','parser.py',255),
  ('condition -> list < list','condition',3,'p_condition','parser.py',256),
  ('condition -> list = list','condition',3,'p_condition','parser.py',257),
  ('condition -> list > NUMBER','condition',3,'p_condition','parser.py',258),
  ('condition -> list < NUMBER','condition',3,'p_condition','parser.py',259),
  ('condition -> list = NUMBER','condition',3,'p_condition','parser.py',260),
  ('agg -> SUM LP NAME RP','agg',4,'p_agg','parser.py',274),
  ('agg -> AVG LP NAME RP','agg',4,'p_agg','parser.py',275),
  ('agg -> COUNT LP NAME RP','agg',4,'p_agg','parser.py',276),
  ('agg -> MIN LP NAME RP','agg',4,'p_agg','parser.py',277),
  ('agg -> MAX LP NAME RP','agg',4,'p_agg','parser.py',278),
  ('agg -> COUNT LP * RP','agg',4,'p_agg','parser.py',279),
  ('list -> *','list',1,'p_list','parser.py',284),
  ('list -> NAME','list',1,'p_list','parser.py',285),
  ('list -> NAME DOT NAME','list',3,'p_list','parser.py',286),
  ('list -> list COMMA list','list',3,'p_list','parser.py',287),
  ('list -> list AND NAME','list',3,'p_list','parser.py',288),
  ('list -> list OR NAME','list',3,'p_list','parser.py',289),
  ('list -> agg','list',1,'p_list','parser.py',290),
]
