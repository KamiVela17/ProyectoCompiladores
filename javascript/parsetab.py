
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEASSIGN COMMA DIVIDE FUNCTION ID LBRACE LPAREN MINUS NUMBER PLUS RBRACE RETURN RPAREN SEMICOLON TIMES VARprogram : statement_liststatement_list : statement\n                      | statement_list statementstatement : var_declaration\n                 | function_declaration\n                 | expression_statement\n                 | return_statementvar_declaration : VAR ID ASSIGN expression SEMICOLONfunction_declaration : FUNCTION ID LPAREN parameters RPAREN LBRACE statement_list RBRACEparameters : ID\n                  | parameters COMMA ID\n                  | emptyempty :return_statement : RETURN expression SEMICOLONexpression_statement : expression SEMICOLONexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : ID'
    
_lr_action_items = {'VAR':([0,2,3,4,5,6,7,15,17,32,37,40,42,43,],[8,8,-2,-4,-5,-6,-7,-3,-15,-14,-8,8,8,-9,]),'FUNCTION':([0,2,3,4,5,6,7,15,17,32,37,40,42,43,],[11,11,-2,-4,-5,-6,-7,-3,-15,-14,-8,11,11,-9,]),'RETURN':([0,2,3,4,5,6,7,15,17,32,37,40,42,43,],[13,13,-2,-4,-5,-6,-7,-3,-15,-14,-8,13,13,-9,]),'LPAREN':([0,2,3,4,5,6,7,12,13,15,17,18,19,20,21,22,25,32,37,40,42,43,],[12,12,-2,-4,-5,-6,-7,12,12,-3,-15,12,12,12,12,30,12,-14,-8,12,12,-9,]),'NUMBER':([0,2,3,4,5,6,7,12,13,15,17,18,19,20,21,25,32,37,40,42,43,],[14,14,-2,-4,-5,-6,-7,14,14,-3,-15,14,14,14,14,14,-14,-8,14,14,-9,]),'ID':([0,2,3,4,5,6,7,8,11,12,13,15,17,18,19,20,21,25,30,32,37,39,40,42,43,],[9,9,-2,-4,-5,-6,-7,16,22,9,9,-3,-15,9,9,9,9,9,34,-14,-8,41,9,9,-9,]),'$end':([1,2,3,4,5,6,7,15,17,32,37,43,],[0,-1,-2,-4,-5,-6,-7,-3,-15,-14,-8,-9,]),'RBRACE':([3,4,5,6,7,15,17,32,37,42,43,],[-2,-4,-5,-6,-7,-3,-15,-14,-8,43,-9,]),'SEMICOLON':([9,10,14,24,26,27,28,29,31,33,],[-22,17,-21,32,-16,-17,-18,-19,-20,37,]),'PLUS':([9,10,14,23,24,26,27,28,29,31,33,],[-22,18,-21,18,18,-16,-17,-18,-19,-20,18,]),'MINUS':([9,10,14,23,24,26,27,28,29,31,33,],[-22,19,-21,19,19,-16,-17,-18,-19,-20,19,]),'TIMES':([9,10,14,23,24,26,27,28,29,31,33,],[-22,20,-21,20,20,20,20,-18,-19,-20,20,]),'DIVIDE':([9,10,14,23,24,26,27,28,29,31,33,],[-22,21,-21,21,21,21,21,-18,-19,-20,21,]),'RPAREN':([9,14,23,26,27,28,29,30,31,34,35,36,41,],[-22,-21,31,-16,-17,-18,-19,-13,-20,-10,38,-12,-11,]),'ASSIGN':([16,],[25,]),'COMMA':([30,34,35,36,41,],[-13,-10,39,-12,-11,]),'LBRACE':([38,],[40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,40,],[2,42,]),'statement':([0,2,40,42,],[3,15,3,15,]),'var_declaration':([0,2,40,42,],[4,4,4,4,]),'function_declaration':([0,2,40,42,],[5,5,5,5,]),'expression_statement':([0,2,40,42,],[6,6,6,6,]),'return_statement':([0,2,40,42,],[7,7,7,7,]),'expression':([0,2,12,13,18,19,20,21,25,40,42,],[10,10,23,24,26,27,28,29,33,10,10,]),'parameters':([30,],[35,]),'empty':([30,],[36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',16),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',20),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',21),
  ('statement -> var_declaration','statement',1,'p_statement','parser.py',28),
  ('statement -> function_declaration','statement',1,'p_statement','parser.py',29),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',30),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',31),
  ('var_declaration -> VAR ID ASSIGN expression SEMICOLON','var_declaration',5,'p_var_declaration','parser.py',35),
  ('function_declaration -> FUNCTION ID LPAREN parameters RPAREN LBRACE statement_list RBRACE','function_declaration',8,'p_function_declaration','parser.py',39),
  ('parameters -> ID','parameters',1,'p_parameters','parser.py',43),
  ('parameters -> parameters COMMA ID','parameters',3,'p_parameters','parser.py',44),
  ('parameters -> empty','parameters',1,'p_parameters','parser.py',45),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',54),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','parser.py',58),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',62),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',66),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',67),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',68),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',69),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',73),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',77),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',81),
]
