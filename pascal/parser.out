Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMEN
    PUN

Grammar

Rule 0     S' -> programa
Rule 1     programa -> funcionlista
Rule 2     funcionlista -> funcion
Rule 3     funcionlista -> funcionlista funcion
Rule 4     funcion -> fundecl ID PARI argumento PARD locales BEGIN lineas END
Rule 5     fundecl -> FUN
Rule 6     argumento -> vacio
Rule 7     argumento -> declaracion
Rule 8     declaracion -> dec
Rule 9     declaracion -> declaracion COMA dec
Rule 10    locales -> loclist PCOMA
Rule 11    locales -> vacio
Rule 12    loclist -> loc
Rule 13    loclist -> loclist PCOMA loc
Rule 14    loc -> dec
Rule 15    loc -> funcion
Rule 16    dec -> ID DPUN type
Rule 17    lineas -> linea
Rule 18    lineas -> lineas PCOMA linea
Rule 19    linea -> expre
Rule 20    linea -> WRITE PARI expre PARD
Rule 21    linea -> READ PARI location PARD
Rule 22    linea -> PRINT PARI STRING PARD
Rule 23    linea -> ID ASIG expre
Rule 24    linea -> RETURN expre
Rule 25    linea -> SKIP
Rule 26    linea -> BREAK
Rule 27    linea -> WHILE relacion DO linea
Rule 28    linea -> IF relacion THEN linea else_r
Rule 29    linea -> BEGIN lineas END
Rule 30    else_r -> ELSE linea
Rule 31    else_r -> vacio
Rule 32    location -> ID
Rule 33    location -> ID CORI expre CORD
Rule 34    relacion -> expre LT expre
Rule 35    relacion -> expre LE expre
Rule 36    relacion -> expre GT expre
Rule 37    relacion -> expre GE expre
Rule 38    relacion -> expre EQ expre
Rule 39    relacion -> expre NE expre
Rule 40    relacion -> relacion AND relacion
Rule 41    relacion -> relacion OR relacion
Rule 42    relacion -> NOT relacion
Rule 43    relacion -> PARI relacion PARD
Rule 44    type -> FLOAT
Rule 45    type -> INT
Rule 46    type -> FLOAT CORI expre CORD
Rule 47    type -> INT CORI expre CORD
Rule 48    exprelist -> exprelist COMA expre
Rule 49    exprelist -> expre
Rule 50    expre -> expre MAS expre
Rule 51    expre -> expre MENOS expre
Rule 52    expre -> expre MUL expre
Rule 53    expre -> expre DIV expre
Rule 54    expre -> MENOS expre
Rule 55    expre -> MAS expre
Rule 56    expre -> ID PARI exprelist PARD
Rule 57    expre -> ID
Rule 58    expre -> ID CORI expre CORD
Rule 59    expre -> FNUM
Rule 60    expre -> INUM
Rule 61    expre -> INT PARI expre PARD
Rule 62    expre -> FLOAT PARI expre PARD
Rule 63    vacio -> <empty>

Terminals, with rules where they appear

AND                  : 40
ASIG                 : 23
BEGIN                : 4 29
BREAK                : 26
COMA                 : 9 48
COMEN                : 
CORD                 : 33 46 47 58
CORI                 : 33 46 47 58
DIV                  : 53
DO                   : 27
DPUN                 : 16
ELSE                 : 30
END                  : 4 29
EQ                   : 38
FLOAT                : 44 46 62
FNUM                 : 59
FUN                  : 5
GE                   : 37
GT                   : 36
ID                   : 4 16 23 32 33 56 57 58
IF                   : 28
INT                  : 45 47 61
INUM                 : 60
LE                   : 35
LT                   : 34
MAS                  : 50 55
MENOS                : 51 54
MUL                  : 52
NE                   : 39
NOT                  : 42
OR                   : 41
PARD                 : 4 20 21 22 43 56 61 62
PARI                 : 4 20 21 22 43 56 61 62
PCOMA                : 10 13 18
PRINT                : 22
PUN                  : 
READ                 : 21
RETURN               : 24
SKIP                 : 25
STRING               : 22
THEN                 : 28
WHILE                : 27
WRITE                : 20
error                : 

Nonterminals, with rules where they appear

argumento            : 4
dec                  : 8 9 14
declaracion          : 7 9
else_r               : 28
expre                : 19 20 23 24 33 34 34 35 35 36 36 37 37 38 38 39 39 46 47 48 49 50 50 51 51 52 52 53 53 54 55 58 61 62
exprelist            : 48 56
funcion              : 2 3 15
funcionlista         : 1 3
fundecl              : 4
linea                : 17 18 27 28 30
lineas               : 4 18 29
loc                  : 12 13
locales              : 4
location             : 21
loclist              : 10 13
programa             : 0
relacion             : 27 28 40 40 41 41 42 43
type                 : 16
vacio                : 6 11 31

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . funcionlista
    (2) funcionlista -> . funcion
    (3) funcionlista -> . funcionlista funcion
    (4) funcion -> . fundecl ID PARI argumento PARD locales BEGIN lineas END
    (5) fundecl -> . FUN

    FUN             shift and go to state 5

    programa                       shift and go to state 1
    funcionlista                   shift and go to state 2
    funcion                        shift and go to state 3
    fundecl                        shift and go to state 4

state 1

    (0) S' -> programa .



state 2

    (1) programa -> funcionlista .
    (3) funcionlista -> funcionlista . funcion
    (4) funcion -> . fundecl ID PARI argumento PARD locales BEGIN lineas END
    (5) fundecl -> . FUN

    $end            reduce using rule 1 (programa -> funcionlista .)
    FUN             shift and go to state 5

    funcion                        shift and go to state 6
    fundecl                        shift and go to state 4

state 3

    (2) funcionlista -> funcion .

    FUN             reduce using rule 2 (funcionlista -> funcion .)
    $end            reduce using rule 2 (funcionlista -> funcion .)


state 4

    (4) funcion -> fundecl . ID PARI argumento PARD locales BEGIN lineas END

    ID              shift and go to state 7


state 5

    (5) fundecl -> FUN .

    ID              reduce using rule 5 (fundecl -> FUN .)


state 6

    (3) funcionlista -> funcionlista funcion .

    FUN             reduce using rule 3 (funcionlista -> funcionlista funcion .)
    $end            reduce using rule 3 (funcionlista -> funcionlista funcion .)


state 7

    (4) funcion -> fundecl ID . PARI argumento PARD locales BEGIN lineas END

    PARI            shift and go to state 8


state 8

    (4) funcion -> fundecl ID PARI . argumento PARD locales BEGIN lineas END
    (6) argumento -> . vacio
    (7) argumento -> . declaracion
    (63) vacio -> .
    (8) declaracion -> . dec
    (9) declaracion -> . declaracion COMA dec
    (16) dec -> . ID DPUN type

    PARD            reduce using rule 63 (vacio -> .)
    ID              shift and go to state 9

    argumento                      shift and go to state 10
    vacio                          shift and go to state 11
    declaracion                    shift and go to state 12
    dec                            shift and go to state 13

state 9

    (16) dec -> ID . DPUN type

    DPUN            shift and go to state 14


state 10

    (4) funcion -> fundecl ID PARI argumento . PARD locales BEGIN lineas END

    PARD            shift and go to state 15


state 11

    (6) argumento -> vacio .

    PARD            reduce using rule 6 (argumento -> vacio .)


state 12

    (7) argumento -> declaracion .
    (9) declaracion -> declaracion . COMA dec

    PARD            reduce using rule 7 (argumento -> declaracion .)
    COMA            shift and go to state 16


state 13

    (8) declaracion -> dec .

    COMA            reduce using rule 8 (declaracion -> dec .)
    PARD            reduce using rule 8 (declaracion -> dec .)


state 14

    (16) dec -> ID DPUN . type
    (44) type -> . FLOAT
    (45) type -> . INT
    (46) type -> . FLOAT CORI expre CORD
    (47) type -> . INT CORI expre CORD

    FLOAT           shift and go to state 18
    INT             shift and go to state 19

    type                           shift and go to state 17

state 15

    (4) funcion -> fundecl ID PARI argumento PARD . locales BEGIN lineas END
    (10) locales -> . loclist PCOMA
    (11) locales -> . vacio
    (12) loclist -> . loc
    (13) loclist -> . loclist PCOMA loc
    (63) vacio -> .
    (14) loc -> . dec
    (15) loc -> . funcion
    (16) dec -> . ID DPUN type
    (4) funcion -> . fundecl ID PARI argumento PARD locales BEGIN lineas END
    (5) fundecl -> . FUN

    BEGIN           reduce using rule 63 (vacio -> .)
    ID              shift and go to state 9
    FUN             shift and go to state 5

    fundecl                        shift and go to state 4
    locales                        shift and go to state 20
    loclist                        shift and go to state 21
    vacio                          shift and go to state 22
    loc                            shift and go to state 23
    dec                            shift and go to state 24
    funcion                        shift and go to state 25

state 16

    (9) declaracion -> declaracion COMA . dec
    (16) dec -> . ID DPUN type

    ID              shift and go to state 9

    dec                            shift and go to state 26

state 17

    (16) dec -> ID DPUN type .

    COMA            reduce using rule 16 (dec -> ID DPUN type .)
    PARD            reduce using rule 16 (dec -> ID DPUN type .)
    PCOMA           reduce using rule 16 (dec -> ID DPUN type .)


state 18

    (44) type -> FLOAT .
    (46) type -> FLOAT . CORI expre CORD

    COMA            reduce using rule 44 (type -> FLOAT .)
    PARD            reduce using rule 44 (type -> FLOAT .)
    PCOMA           reduce using rule 44 (type -> FLOAT .)
    CORI            shift and go to state 27


state 19

    (45) type -> INT .
    (47) type -> INT . CORI expre CORD

    COMA            reduce using rule 45 (type -> INT .)
    PARD            reduce using rule 45 (type -> INT .)
    PCOMA           reduce using rule 45 (type -> INT .)
    CORI            shift and go to state 28


state 20

    (4) funcion -> fundecl ID PARI argumento PARD locales . BEGIN lineas END

    BEGIN           shift and go to state 29


state 21

    (10) locales -> loclist . PCOMA
    (13) loclist -> loclist . PCOMA loc

    PCOMA           shift and go to state 30


state 22

    (11) locales -> vacio .

    BEGIN           reduce using rule 11 (locales -> vacio .)


state 23

    (12) loclist -> loc .

    PCOMA           reduce using rule 12 (loclist -> loc .)


state 24

    (14) loc -> dec .

    PCOMA           reduce using rule 14 (loc -> dec .)


state 25

    (15) loc -> funcion .

    PCOMA           reduce using rule 15 (loc -> funcion .)


state 26

    (9) declaracion -> declaracion COMA dec .

    COMA            reduce using rule 9 (declaracion -> declaracion COMA dec .)
    PARD            reduce using rule 9 (declaracion -> declaracion COMA dec .)


state 27

    (46) type -> FLOAT CORI . expre CORD
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 32

state 28

    (47) type -> INT CORI . expre CORD
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 39

state 29

    (4) funcion -> fundecl ID PARI argumento PARD locales BEGIN . lineas END
    (17) lineas -> . linea
    (18) lineas -> . lineas PCOMA linea
    (19) linea -> . expre
    (20) linea -> . WRITE PARI expre PARD
    (21) linea -> . READ PARI location PARD
    (22) linea -> . PRINT PARI STRING PARD
    (23) linea -> . ID ASIG expre
    (24) linea -> . RETURN expre
    (25) linea -> . SKIP
    (26) linea -> . BREAK
    (27) linea -> . WHILE relacion DO linea
    (28) linea -> . IF relacion THEN linea else_r
    (29) linea -> . BEGIN lineas END
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    WRITE           shift and go to state 45
    READ            shift and go to state 46
    PRINT           shift and go to state 47
    ID              shift and go to state 40
    RETURN          shift and go to state 48
    SKIP            shift and go to state 49
    BREAK           shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52
    BEGIN           shift and go to state 41
    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    lineas                         shift and go to state 42
    linea                          shift and go to state 43
    expre                          shift and go to state 44

state 30

    (10) locales -> loclist PCOMA .
    (13) loclist -> loclist PCOMA . loc
    (14) loc -> . dec
    (15) loc -> . funcion
    (16) dec -> . ID DPUN type
    (4) funcion -> . fundecl ID PARI argumento PARD locales BEGIN lineas END
    (5) fundecl -> . FUN

    BEGIN           reduce using rule 10 (locales -> loclist PCOMA .)
    ID              shift and go to state 9
    FUN             shift and go to state 5

    loc                            shift and go to state 53
    dec                            shift and go to state 24
    funcion                        shift and go to state 25
    fundecl                        shift and go to state 4

state 31

    (62) expre -> FLOAT . PARI expre PARD

    PARI            shift and go to state 54


state 32

    (46) type -> FLOAT CORI expre . CORD
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    CORD            shift and go to state 55
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 33

    (55) expre -> MAS . expre
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 60

state 34

    (54) expre -> MENOS . expre
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 61

state 35

    (56) expre -> ID . PARI exprelist PARD
    (57) expre -> ID .
    (58) expre -> ID . CORI expre CORD

    PARI            shift and go to state 62
    CORD            reduce using rule 57 (expre -> ID .)
    MAS             reduce using rule 57 (expre -> ID .)
    MENOS           reduce using rule 57 (expre -> ID .)
    MUL             reduce using rule 57 (expre -> ID .)
    DIV             reduce using rule 57 (expre -> ID .)
    END             reduce using rule 57 (expre -> ID .)
    PCOMA           reduce using rule 57 (expre -> ID .)
    ELSE            reduce using rule 57 (expre -> ID .)
    LT              reduce using rule 57 (expre -> ID .)
    LE              reduce using rule 57 (expre -> ID .)
    GT              reduce using rule 57 (expre -> ID .)
    GE              reduce using rule 57 (expre -> ID .)
    EQ              reduce using rule 57 (expre -> ID .)
    NE              reduce using rule 57 (expre -> ID .)
    PARD            reduce using rule 57 (expre -> ID .)
    COMA            reduce using rule 57 (expre -> ID .)
    DO              reduce using rule 57 (expre -> ID .)
    AND             reduce using rule 57 (expre -> ID .)
    OR              reduce using rule 57 (expre -> ID .)
    THEN            reduce using rule 57 (expre -> ID .)
    CORI            shift and go to state 63


state 36

    (59) expre -> FNUM .

    CORD            reduce using rule 59 (expre -> FNUM .)
    MAS             reduce using rule 59 (expre -> FNUM .)
    MENOS           reduce using rule 59 (expre -> FNUM .)
    MUL             reduce using rule 59 (expre -> FNUM .)
    DIV             reduce using rule 59 (expre -> FNUM .)
    END             reduce using rule 59 (expre -> FNUM .)
    PCOMA           reduce using rule 59 (expre -> FNUM .)
    ELSE            reduce using rule 59 (expre -> FNUM .)
    LT              reduce using rule 59 (expre -> FNUM .)
    LE              reduce using rule 59 (expre -> FNUM .)
    GT              reduce using rule 59 (expre -> FNUM .)
    GE              reduce using rule 59 (expre -> FNUM .)
    EQ              reduce using rule 59 (expre -> FNUM .)
    NE              reduce using rule 59 (expre -> FNUM .)
    PARD            reduce using rule 59 (expre -> FNUM .)
    COMA            reduce using rule 59 (expre -> FNUM .)
    DO              reduce using rule 59 (expre -> FNUM .)
    AND             reduce using rule 59 (expre -> FNUM .)
    OR              reduce using rule 59 (expre -> FNUM .)
    THEN            reduce using rule 59 (expre -> FNUM .)


state 37

    (60) expre -> INUM .

    CORD            reduce using rule 60 (expre -> INUM .)
    MAS             reduce using rule 60 (expre -> INUM .)
    MENOS           reduce using rule 60 (expre -> INUM .)
    MUL             reduce using rule 60 (expre -> INUM .)
    DIV             reduce using rule 60 (expre -> INUM .)
    END             reduce using rule 60 (expre -> INUM .)
    PCOMA           reduce using rule 60 (expre -> INUM .)
    ELSE            reduce using rule 60 (expre -> INUM .)
    LT              reduce using rule 60 (expre -> INUM .)
    LE              reduce using rule 60 (expre -> INUM .)
    GT              reduce using rule 60 (expre -> INUM .)
    GE              reduce using rule 60 (expre -> INUM .)
    EQ              reduce using rule 60 (expre -> INUM .)
    NE              reduce using rule 60 (expre -> INUM .)
    PARD            reduce using rule 60 (expre -> INUM .)
    COMA            reduce using rule 60 (expre -> INUM .)
    DO              reduce using rule 60 (expre -> INUM .)
    AND             reduce using rule 60 (expre -> INUM .)
    OR              reduce using rule 60 (expre -> INUM .)
    THEN            reduce using rule 60 (expre -> INUM .)


state 38

    (61) expre -> INT . PARI expre PARD

    PARI            shift and go to state 64


state 39

    (47) type -> INT CORI expre . CORD
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    CORD            shift and go to state 65
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 40

    (23) linea -> ID . ASIG expre
    (56) expre -> ID . PARI exprelist PARD
    (57) expre -> ID .
    (58) expre -> ID . CORI expre CORD

    ASIG            shift and go to state 66
    PARI            shift and go to state 62
    MAS             reduce using rule 57 (expre -> ID .)
    MENOS           reduce using rule 57 (expre -> ID .)
    MUL             reduce using rule 57 (expre -> ID .)
    DIV             reduce using rule 57 (expre -> ID .)
    END             reduce using rule 57 (expre -> ID .)
    PCOMA           reduce using rule 57 (expre -> ID .)
    ELSE            reduce using rule 57 (expre -> ID .)
    CORI            shift and go to state 63


state 41

    (29) linea -> BEGIN . lineas END
    (17) lineas -> . linea
    (18) lineas -> . lineas PCOMA linea
    (19) linea -> . expre
    (20) linea -> . WRITE PARI expre PARD
    (21) linea -> . READ PARI location PARD
    (22) linea -> . PRINT PARI STRING PARD
    (23) linea -> . ID ASIG expre
    (24) linea -> . RETURN expre
    (25) linea -> . SKIP
    (26) linea -> . BREAK
    (27) linea -> . WHILE relacion DO linea
    (28) linea -> . IF relacion THEN linea else_r
    (29) linea -> . BEGIN lineas END
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    WRITE           shift and go to state 45
    READ            shift and go to state 46
    PRINT           shift and go to state 47
    ID              shift and go to state 40
    RETURN          shift and go to state 48
    SKIP            shift and go to state 49
    BREAK           shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52
    BEGIN           shift and go to state 41
    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    lineas                         shift and go to state 67
    linea                          shift and go to state 43
    expre                          shift and go to state 44

state 42

    (4) funcion -> fundecl ID PARI argumento PARD locales BEGIN lineas . END
    (18) lineas -> lineas . PCOMA linea

    END             shift and go to state 68
    PCOMA           shift and go to state 69


state 43

    (17) lineas -> linea .

    END             reduce using rule 17 (lineas -> linea .)
    PCOMA           reduce using rule 17 (lineas -> linea .)


state 44

    (19) linea -> expre .
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    END             reduce using rule 19 (linea -> expre .)
    PCOMA           reduce using rule 19 (linea -> expre .)
    ELSE            reduce using rule 19 (linea -> expre .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 45

    (20) linea -> WRITE . PARI expre PARD

    PARI            shift and go to state 70


state 46

    (21) linea -> READ . PARI location PARD

    PARI            shift and go to state 71


state 47

    (22) linea -> PRINT . PARI STRING PARD

    PARI            shift and go to state 72


state 48

    (24) linea -> RETURN . expre
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 73

state 49

    (25) linea -> SKIP .

    END             reduce using rule 25 (linea -> SKIP .)
    PCOMA           reduce using rule 25 (linea -> SKIP .)
    ELSE            reduce using rule 25 (linea -> SKIP .)


state 50

    (26) linea -> BREAK .

    END             reduce using rule 26 (linea -> BREAK .)
    PCOMA           reduce using rule 26 (linea -> BREAK .)
    ELSE            reduce using rule 26 (linea -> BREAK .)


state 51

    (27) linea -> WHILE . relacion DO linea
    (34) relacion -> . expre LT expre
    (35) relacion -> . expre LE expre
    (36) relacion -> . expre GT expre
    (37) relacion -> . expre GE expre
    (38) relacion -> . expre EQ expre
    (39) relacion -> . expre NE expre
    (40) relacion -> . relacion AND relacion
    (41) relacion -> . relacion OR relacion
    (42) relacion -> . NOT relacion
    (43) relacion -> . PARI relacion PARD
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    NOT             shift and go to state 76
    PARI            shift and go to state 77
    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    relacion                       shift and go to state 74
    expre                          shift and go to state 75

state 52

    (28) linea -> IF . relacion THEN linea else_r
    (34) relacion -> . expre LT expre
    (35) relacion -> . expre LE expre
    (36) relacion -> . expre GT expre
    (37) relacion -> . expre GE expre
    (38) relacion -> . expre EQ expre
    (39) relacion -> . expre NE expre
    (40) relacion -> . relacion AND relacion
    (41) relacion -> . relacion OR relacion
    (42) relacion -> . NOT relacion
    (43) relacion -> . PARI relacion PARD
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    NOT             shift and go to state 76
    PARI            shift and go to state 77
    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    relacion                       shift and go to state 78
    expre                          shift and go to state 75

state 53

    (13) loclist -> loclist PCOMA loc .

    PCOMA           reduce using rule 13 (loclist -> loclist PCOMA loc .)


state 54

    (62) expre -> FLOAT PARI . expre PARD
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 79

state 55

    (46) type -> FLOAT CORI expre CORD .

    COMA            reduce using rule 46 (type -> FLOAT CORI expre CORD .)
    PARD            reduce using rule 46 (type -> FLOAT CORI expre CORD .)
    PCOMA           reduce using rule 46 (type -> FLOAT CORI expre CORD .)


state 56

    (50) expre -> expre MAS . expre
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 80

state 57

    (51) expre -> expre MENOS . expre
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 81

state 58

    (52) expre -> expre MUL . expre
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 82

state 59

    (53) expre -> expre DIV . expre
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 83

state 60

    (55) expre -> MAS expre .
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    CORD            reduce using rule 55 (expre -> MAS expre .)
    MAS             reduce using rule 55 (expre -> MAS expre .)
    MENOS           reduce using rule 55 (expre -> MAS expre .)
    END             reduce using rule 55 (expre -> MAS expre .)
    PCOMA           reduce using rule 55 (expre -> MAS expre .)
    ELSE            reduce using rule 55 (expre -> MAS expre .)
    LT              reduce using rule 55 (expre -> MAS expre .)
    LE              reduce using rule 55 (expre -> MAS expre .)
    GT              reduce using rule 55 (expre -> MAS expre .)
    GE              reduce using rule 55 (expre -> MAS expre .)
    EQ              reduce using rule 55 (expre -> MAS expre .)
    NE              reduce using rule 55 (expre -> MAS expre .)
    PARD            reduce using rule 55 (expre -> MAS expre .)
    COMA            reduce using rule 55 (expre -> MAS expre .)
    DO              reduce using rule 55 (expre -> MAS expre .)
    AND             reduce using rule 55 (expre -> MAS expre .)
    OR              reduce using rule 55 (expre -> MAS expre .)
    THEN            reduce using rule 55 (expre -> MAS expre .)
    MUL             shift and go to state 58
    DIV             shift and go to state 59

  ! MUL             [ reduce using rule 55 (expre -> MAS expre .) ]
  ! DIV             [ reduce using rule 55 (expre -> MAS expre .) ]
  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]


state 61

    (54) expre -> MENOS expre .
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    CORD            reduce using rule 54 (expre -> MENOS expre .)
    MAS             reduce using rule 54 (expre -> MENOS expre .)
    MENOS           reduce using rule 54 (expre -> MENOS expre .)
    END             reduce using rule 54 (expre -> MENOS expre .)
    PCOMA           reduce using rule 54 (expre -> MENOS expre .)
    ELSE            reduce using rule 54 (expre -> MENOS expre .)
    LT              reduce using rule 54 (expre -> MENOS expre .)
    LE              reduce using rule 54 (expre -> MENOS expre .)
    GT              reduce using rule 54 (expre -> MENOS expre .)
    GE              reduce using rule 54 (expre -> MENOS expre .)
    EQ              reduce using rule 54 (expre -> MENOS expre .)
    NE              reduce using rule 54 (expre -> MENOS expre .)
    PARD            reduce using rule 54 (expre -> MENOS expre .)
    COMA            reduce using rule 54 (expre -> MENOS expre .)
    DO              reduce using rule 54 (expre -> MENOS expre .)
    AND             reduce using rule 54 (expre -> MENOS expre .)
    OR              reduce using rule 54 (expre -> MENOS expre .)
    THEN            reduce using rule 54 (expre -> MENOS expre .)
    MUL             shift and go to state 58
    DIV             shift and go to state 59

  ! MUL             [ reduce using rule 54 (expre -> MENOS expre .) ]
  ! DIV             [ reduce using rule 54 (expre -> MENOS expre .) ]
  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]


state 62

    (56) expre -> ID PARI . exprelist PARD
    (48) exprelist -> . exprelist COMA expre
    (49) exprelist -> . expre
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    exprelist                      shift and go to state 84
    expre                          shift and go to state 85

state 63

    (58) expre -> ID CORI . expre CORD
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 86

state 64

    (61) expre -> INT PARI . expre PARD
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 87

state 65

    (47) type -> INT CORI expre CORD .

    COMA            reduce using rule 47 (type -> INT CORI expre CORD .)
    PARD            reduce using rule 47 (type -> INT CORI expre CORD .)
    PCOMA           reduce using rule 47 (type -> INT CORI expre CORD .)


state 66

    (23) linea -> ID ASIG . expre
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 88

state 67

    (29) linea -> BEGIN lineas . END
    (18) lineas -> lineas . PCOMA linea

    END             shift and go to state 89
    PCOMA           shift and go to state 69


state 68

    (4) funcion -> fundecl ID PARI argumento PARD locales BEGIN lineas END .

    FUN             reduce using rule 4 (funcion -> fundecl ID PARI argumento PARD locales BEGIN lineas END .)
    $end            reduce using rule 4 (funcion -> fundecl ID PARI argumento PARD locales BEGIN lineas END .)
    PCOMA           reduce using rule 4 (funcion -> fundecl ID PARI argumento PARD locales BEGIN lineas END .)


state 69

    (18) lineas -> lineas PCOMA . linea
    (19) linea -> . expre
    (20) linea -> . WRITE PARI expre PARD
    (21) linea -> . READ PARI location PARD
    (22) linea -> . PRINT PARI STRING PARD
    (23) linea -> . ID ASIG expre
    (24) linea -> . RETURN expre
    (25) linea -> . SKIP
    (26) linea -> . BREAK
    (27) linea -> . WHILE relacion DO linea
    (28) linea -> . IF relacion THEN linea else_r
    (29) linea -> . BEGIN lineas END
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    WRITE           shift and go to state 45
    READ            shift and go to state 46
    PRINT           shift and go to state 47
    ID              shift and go to state 40
    RETURN          shift and go to state 48
    SKIP            shift and go to state 49
    BREAK           shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52
    BEGIN           shift and go to state 41
    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    linea                          shift and go to state 90
    expre                          shift and go to state 44

state 70

    (20) linea -> WRITE PARI . expre PARD
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 91

state 71

    (21) linea -> READ PARI . location PARD
    (32) location -> . ID
    (33) location -> . ID CORI expre CORD

    ID              shift and go to state 93

    location                       shift and go to state 92

state 72

    (22) linea -> PRINT PARI . STRING PARD

    STRING          shift and go to state 94


state 73

    (24) linea -> RETURN expre .
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    END             reduce using rule 24 (linea -> RETURN expre .)
    PCOMA           reduce using rule 24 (linea -> RETURN expre .)
    ELSE            reduce using rule 24 (linea -> RETURN expre .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 74

    (27) linea -> WHILE relacion . DO linea
    (40) relacion -> relacion . AND relacion
    (41) relacion -> relacion . OR relacion

    DO              shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97


state 75

    (34) relacion -> expre . LT expre
    (35) relacion -> expre . LE expre
    (36) relacion -> expre . GT expre
    (37) relacion -> expre . GE expre
    (38) relacion -> expre . EQ expre
    (39) relacion -> expre . NE expre
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    LT              shift and go to state 98
    LE              shift and go to state 99
    GT              shift and go to state 100
    GE              shift and go to state 101
    EQ              shift and go to state 102
    NE              shift and go to state 103
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 76

    (42) relacion -> NOT . relacion
    (34) relacion -> . expre LT expre
    (35) relacion -> . expre LE expre
    (36) relacion -> . expre GT expre
    (37) relacion -> . expre GE expre
    (38) relacion -> . expre EQ expre
    (39) relacion -> . expre NE expre
    (40) relacion -> . relacion AND relacion
    (41) relacion -> . relacion OR relacion
    (42) relacion -> . NOT relacion
    (43) relacion -> . PARI relacion PARD
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    NOT             shift and go to state 76
    PARI            shift and go to state 77
    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    relacion                       shift and go to state 104
    expre                          shift and go to state 75

state 77

    (43) relacion -> PARI . relacion PARD
    (34) relacion -> . expre LT expre
    (35) relacion -> . expre LE expre
    (36) relacion -> . expre GT expre
    (37) relacion -> . expre GE expre
    (38) relacion -> . expre EQ expre
    (39) relacion -> . expre NE expre
    (40) relacion -> . relacion AND relacion
    (41) relacion -> . relacion OR relacion
    (42) relacion -> . NOT relacion
    (43) relacion -> . PARI relacion PARD
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    NOT             shift and go to state 76
    PARI            shift and go to state 77
    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    relacion                       shift and go to state 105
    expre                          shift and go to state 75

state 78

    (28) linea -> IF relacion . THEN linea else_r
    (40) relacion -> relacion . AND relacion
    (41) relacion -> relacion . OR relacion

    THEN            shift and go to state 106
    AND             shift and go to state 96
    OR              shift and go to state 97


state 79

    (62) expre -> FLOAT PARI expre . PARD
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    PARD            shift and go to state 107
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 80

    (50) expre -> expre MAS expre .
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    CORD            reduce using rule 50 (expre -> expre MAS expre .)
    MAS             reduce using rule 50 (expre -> expre MAS expre .)
    MENOS           reduce using rule 50 (expre -> expre MAS expre .)
    END             reduce using rule 50 (expre -> expre MAS expre .)
    PCOMA           reduce using rule 50 (expre -> expre MAS expre .)
    ELSE            reduce using rule 50 (expre -> expre MAS expre .)
    LT              reduce using rule 50 (expre -> expre MAS expre .)
    LE              reduce using rule 50 (expre -> expre MAS expre .)
    GT              reduce using rule 50 (expre -> expre MAS expre .)
    GE              reduce using rule 50 (expre -> expre MAS expre .)
    EQ              reduce using rule 50 (expre -> expre MAS expre .)
    NE              reduce using rule 50 (expre -> expre MAS expre .)
    PARD            reduce using rule 50 (expre -> expre MAS expre .)
    COMA            reduce using rule 50 (expre -> expre MAS expre .)
    DO              reduce using rule 50 (expre -> expre MAS expre .)
    AND             reduce using rule 50 (expre -> expre MAS expre .)
    OR              reduce using rule 50 (expre -> expre MAS expre .)
    THEN            reduce using rule 50 (expre -> expre MAS expre .)
    MUL             shift and go to state 58
    DIV             shift and go to state 59

  ! MUL             [ reduce using rule 50 (expre -> expre MAS expre .) ]
  ! DIV             [ reduce using rule 50 (expre -> expre MAS expre .) ]
  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]


state 81

    (51) expre -> expre MENOS expre .
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    CORD            reduce using rule 51 (expre -> expre MENOS expre .)
    MAS             reduce using rule 51 (expre -> expre MENOS expre .)
    MENOS           reduce using rule 51 (expre -> expre MENOS expre .)
    END             reduce using rule 51 (expre -> expre MENOS expre .)
    PCOMA           reduce using rule 51 (expre -> expre MENOS expre .)
    ELSE            reduce using rule 51 (expre -> expre MENOS expre .)
    LT              reduce using rule 51 (expre -> expre MENOS expre .)
    LE              reduce using rule 51 (expre -> expre MENOS expre .)
    GT              reduce using rule 51 (expre -> expre MENOS expre .)
    GE              reduce using rule 51 (expre -> expre MENOS expre .)
    EQ              reduce using rule 51 (expre -> expre MENOS expre .)
    NE              reduce using rule 51 (expre -> expre MENOS expre .)
    PARD            reduce using rule 51 (expre -> expre MENOS expre .)
    COMA            reduce using rule 51 (expre -> expre MENOS expre .)
    DO              reduce using rule 51 (expre -> expre MENOS expre .)
    AND             reduce using rule 51 (expre -> expre MENOS expre .)
    OR              reduce using rule 51 (expre -> expre MENOS expre .)
    THEN            reduce using rule 51 (expre -> expre MENOS expre .)
    MUL             shift and go to state 58
    DIV             shift and go to state 59

  ! MUL             [ reduce using rule 51 (expre -> expre MENOS expre .) ]
  ! DIV             [ reduce using rule 51 (expre -> expre MENOS expre .) ]
  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]


state 82

    (52) expre -> expre MUL expre .
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    CORD            reduce using rule 52 (expre -> expre MUL expre .)
    MAS             reduce using rule 52 (expre -> expre MUL expre .)
    MENOS           reduce using rule 52 (expre -> expre MUL expre .)
    MUL             reduce using rule 52 (expre -> expre MUL expre .)
    DIV             reduce using rule 52 (expre -> expre MUL expre .)
    END             reduce using rule 52 (expre -> expre MUL expre .)
    PCOMA           reduce using rule 52 (expre -> expre MUL expre .)
    ELSE            reduce using rule 52 (expre -> expre MUL expre .)
    LT              reduce using rule 52 (expre -> expre MUL expre .)
    LE              reduce using rule 52 (expre -> expre MUL expre .)
    GT              reduce using rule 52 (expre -> expre MUL expre .)
    GE              reduce using rule 52 (expre -> expre MUL expre .)
    EQ              reduce using rule 52 (expre -> expre MUL expre .)
    NE              reduce using rule 52 (expre -> expre MUL expre .)
    PARD            reduce using rule 52 (expre -> expre MUL expre .)
    COMA            reduce using rule 52 (expre -> expre MUL expre .)
    DO              reduce using rule 52 (expre -> expre MUL expre .)
    AND             reduce using rule 52 (expre -> expre MUL expre .)
    OR              reduce using rule 52 (expre -> expre MUL expre .)
    THEN            reduce using rule 52 (expre -> expre MUL expre .)

  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]
  ! MUL             [ shift and go to state 58 ]
  ! DIV             [ shift and go to state 59 ]


state 83

    (53) expre -> expre DIV expre .
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    CORD            reduce using rule 53 (expre -> expre DIV expre .)
    MAS             reduce using rule 53 (expre -> expre DIV expre .)
    MENOS           reduce using rule 53 (expre -> expre DIV expre .)
    MUL             reduce using rule 53 (expre -> expre DIV expre .)
    DIV             reduce using rule 53 (expre -> expre DIV expre .)
    END             reduce using rule 53 (expre -> expre DIV expre .)
    PCOMA           reduce using rule 53 (expre -> expre DIV expre .)
    ELSE            reduce using rule 53 (expre -> expre DIV expre .)
    LT              reduce using rule 53 (expre -> expre DIV expre .)
    LE              reduce using rule 53 (expre -> expre DIV expre .)
    GT              reduce using rule 53 (expre -> expre DIV expre .)
    GE              reduce using rule 53 (expre -> expre DIV expre .)
    EQ              reduce using rule 53 (expre -> expre DIV expre .)
    NE              reduce using rule 53 (expre -> expre DIV expre .)
    PARD            reduce using rule 53 (expre -> expre DIV expre .)
    COMA            reduce using rule 53 (expre -> expre DIV expre .)
    DO              reduce using rule 53 (expre -> expre DIV expre .)
    AND             reduce using rule 53 (expre -> expre DIV expre .)
    OR              reduce using rule 53 (expre -> expre DIV expre .)
    THEN            reduce using rule 53 (expre -> expre DIV expre .)

  ! MAS             [ shift and go to state 56 ]
  ! MENOS           [ shift and go to state 57 ]
  ! MUL             [ shift and go to state 58 ]
  ! DIV             [ shift and go to state 59 ]


state 84

    (56) expre -> ID PARI exprelist . PARD
    (48) exprelist -> exprelist . COMA expre

    PARD            shift and go to state 108
    COMA            shift and go to state 109


state 85

    (49) exprelist -> expre .
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    PARD            reduce using rule 49 (exprelist -> expre .)
    COMA            reduce using rule 49 (exprelist -> expre .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 86

    (58) expre -> ID CORI expre . CORD
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    CORD            shift and go to state 110
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 87

    (61) expre -> INT PARI expre . PARD
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    PARD            shift and go to state 111
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 88

    (23) linea -> ID ASIG expre .
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    END             reduce using rule 23 (linea -> ID ASIG expre .)
    PCOMA           reduce using rule 23 (linea -> ID ASIG expre .)
    ELSE            reduce using rule 23 (linea -> ID ASIG expre .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 89

    (29) linea -> BEGIN lineas END .

    END             reduce using rule 29 (linea -> BEGIN lineas END .)
    PCOMA           reduce using rule 29 (linea -> BEGIN lineas END .)
    ELSE            reduce using rule 29 (linea -> BEGIN lineas END .)


state 90

    (18) lineas -> lineas PCOMA linea .

    END             reduce using rule 18 (lineas -> lineas PCOMA linea .)
    PCOMA           reduce using rule 18 (lineas -> lineas PCOMA linea .)


state 91

    (20) linea -> WRITE PARI expre . PARD
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    PARD            shift and go to state 112
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 92

    (21) linea -> READ PARI location . PARD

    PARD            shift and go to state 113


state 93

    (32) location -> ID .
    (33) location -> ID . CORI expre CORD

    PARD            reduce using rule 32 (location -> ID .)
    CORI            shift and go to state 114


state 94

    (22) linea -> PRINT PARI STRING . PARD

    PARD            shift and go to state 115


state 95

    (27) linea -> WHILE relacion DO . linea
    (19) linea -> . expre
    (20) linea -> . WRITE PARI expre PARD
    (21) linea -> . READ PARI location PARD
    (22) linea -> . PRINT PARI STRING PARD
    (23) linea -> . ID ASIG expre
    (24) linea -> . RETURN expre
    (25) linea -> . SKIP
    (26) linea -> . BREAK
    (27) linea -> . WHILE relacion DO linea
    (28) linea -> . IF relacion THEN linea else_r
    (29) linea -> . BEGIN lineas END
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    WRITE           shift and go to state 45
    READ            shift and go to state 46
    PRINT           shift and go to state 47
    ID              shift and go to state 40
    RETURN          shift and go to state 48
    SKIP            shift and go to state 49
    BREAK           shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52
    BEGIN           shift and go to state 41
    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    linea                          shift and go to state 116
    expre                          shift and go to state 44

state 96

    (40) relacion -> relacion AND . relacion
    (34) relacion -> . expre LT expre
    (35) relacion -> . expre LE expre
    (36) relacion -> . expre GT expre
    (37) relacion -> . expre GE expre
    (38) relacion -> . expre EQ expre
    (39) relacion -> . expre NE expre
    (40) relacion -> . relacion AND relacion
    (41) relacion -> . relacion OR relacion
    (42) relacion -> . NOT relacion
    (43) relacion -> . PARI relacion PARD
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    NOT             shift and go to state 76
    PARI            shift and go to state 77
    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    relacion                       shift and go to state 117
    expre                          shift and go to state 75

state 97

    (41) relacion -> relacion OR . relacion
    (34) relacion -> . expre LT expre
    (35) relacion -> . expre LE expre
    (36) relacion -> . expre GT expre
    (37) relacion -> . expre GE expre
    (38) relacion -> . expre EQ expre
    (39) relacion -> . expre NE expre
    (40) relacion -> . relacion AND relacion
    (41) relacion -> . relacion OR relacion
    (42) relacion -> . NOT relacion
    (43) relacion -> . PARI relacion PARD
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    NOT             shift and go to state 76
    PARI            shift and go to state 77
    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    relacion                       shift and go to state 118
    expre                          shift and go to state 75

state 98

    (34) relacion -> expre LT . expre
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 119

state 99

    (35) relacion -> expre LE . expre
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 120

state 100

    (36) relacion -> expre GT . expre
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 121

state 101

    (37) relacion -> expre GE . expre
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 122

state 102

    (38) relacion -> expre EQ . expre
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 123

state 103

    (39) relacion -> expre NE . expre
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 124

state 104

    (42) relacion -> NOT relacion .
    (40) relacion -> relacion . AND relacion
    (41) relacion -> relacion . OR relacion

    DO              reduce using rule 42 (relacion -> NOT relacion .)
    AND             reduce using rule 42 (relacion -> NOT relacion .)
    OR              reduce using rule 42 (relacion -> NOT relacion .)
    THEN            reduce using rule 42 (relacion -> NOT relacion .)
    PARD            reduce using rule 42 (relacion -> NOT relacion .)

  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]


state 105

    (43) relacion -> PARI relacion . PARD
    (40) relacion -> relacion . AND relacion
    (41) relacion -> relacion . OR relacion

    PARD            shift and go to state 125
    AND             shift and go to state 96
    OR              shift and go to state 97


state 106

    (28) linea -> IF relacion THEN . linea else_r
    (19) linea -> . expre
    (20) linea -> . WRITE PARI expre PARD
    (21) linea -> . READ PARI location PARD
    (22) linea -> . PRINT PARI STRING PARD
    (23) linea -> . ID ASIG expre
    (24) linea -> . RETURN expre
    (25) linea -> . SKIP
    (26) linea -> . BREAK
    (27) linea -> . WHILE relacion DO linea
    (28) linea -> . IF relacion THEN linea else_r
    (29) linea -> . BEGIN lineas END
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    WRITE           shift and go to state 45
    READ            shift and go to state 46
    PRINT           shift and go to state 47
    ID              shift and go to state 40
    RETURN          shift and go to state 48
    SKIP            shift and go to state 49
    BREAK           shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52
    BEGIN           shift and go to state 41
    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    linea                          shift and go to state 126
    expre                          shift and go to state 44

state 107

    (62) expre -> FLOAT PARI expre PARD .

    CORD            reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    MAS             reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    MENOS           reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    MUL             reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    DIV             reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    END             reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    PCOMA           reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    ELSE            reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    LT              reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    LE              reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    GT              reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    GE              reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    EQ              reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    NE              reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    PARD            reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    COMA            reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    DO              reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    AND             reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    OR              reduce using rule 62 (expre -> FLOAT PARI expre PARD .)
    THEN            reduce using rule 62 (expre -> FLOAT PARI expre PARD .)


state 108

    (56) expre -> ID PARI exprelist PARD .

    CORD            reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    MAS             reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    MENOS           reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    MUL             reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    DIV             reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    END             reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    PCOMA           reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    ELSE            reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    LT              reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    LE              reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    GT              reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    GE              reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    EQ              reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    NE              reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    PARD            reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    COMA            reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    DO              reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    AND             reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    OR              reduce using rule 56 (expre -> ID PARI exprelist PARD .)
    THEN            reduce using rule 56 (expre -> ID PARI exprelist PARD .)


state 109

    (48) exprelist -> exprelist COMA . expre
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 127

state 110

    (58) expre -> ID CORI expre CORD .

    CORD            reduce using rule 58 (expre -> ID CORI expre CORD .)
    MAS             reduce using rule 58 (expre -> ID CORI expre CORD .)
    MENOS           reduce using rule 58 (expre -> ID CORI expre CORD .)
    MUL             reduce using rule 58 (expre -> ID CORI expre CORD .)
    DIV             reduce using rule 58 (expre -> ID CORI expre CORD .)
    END             reduce using rule 58 (expre -> ID CORI expre CORD .)
    PCOMA           reduce using rule 58 (expre -> ID CORI expre CORD .)
    ELSE            reduce using rule 58 (expre -> ID CORI expre CORD .)
    LT              reduce using rule 58 (expre -> ID CORI expre CORD .)
    LE              reduce using rule 58 (expre -> ID CORI expre CORD .)
    GT              reduce using rule 58 (expre -> ID CORI expre CORD .)
    GE              reduce using rule 58 (expre -> ID CORI expre CORD .)
    EQ              reduce using rule 58 (expre -> ID CORI expre CORD .)
    NE              reduce using rule 58 (expre -> ID CORI expre CORD .)
    PARD            reduce using rule 58 (expre -> ID CORI expre CORD .)
    COMA            reduce using rule 58 (expre -> ID CORI expre CORD .)
    DO              reduce using rule 58 (expre -> ID CORI expre CORD .)
    AND             reduce using rule 58 (expre -> ID CORI expre CORD .)
    OR              reduce using rule 58 (expre -> ID CORI expre CORD .)
    THEN            reduce using rule 58 (expre -> ID CORI expre CORD .)


state 111

    (61) expre -> INT PARI expre PARD .

    CORD            reduce using rule 61 (expre -> INT PARI expre PARD .)
    MAS             reduce using rule 61 (expre -> INT PARI expre PARD .)
    MENOS           reduce using rule 61 (expre -> INT PARI expre PARD .)
    MUL             reduce using rule 61 (expre -> INT PARI expre PARD .)
    DIV             reduce using rule 61 (expre -> INT PARI expre PARD .)
    END             reduce using rule 61 (expre -> INT PARI expre PARD .)
    PCOMA           reduce using rule 61 (expre -> INT PARI expre PARD .)
    ELSE            reduce using rule 61 (expre -> INT PARI expre PARD .)
    LT              reduce using rule 61 (expre -> INT PARI expre PARD .)
    LE              reduce using rule 61 (expre -> INT PARI expre PARD .)
    GT              reduce using rule 61 (expre -> INT PARI expre PARD .)
    GE              reduce using rule 61 (expre -> INT PARI expre PARD .)
    EQ              reduce using rule 61 (expre -> INT PARI expre PARD .)
    NE              reduce using rule 61 (expre -> INT PARI expre PARD .)
    PARD            reduce using rule 61 (expre -> INT PARI expre PARD .)
    COMA            reduce using rule 61 (expre -> INT PARI expre PARD .)
    DO              reduce using rule 61 (expre -> INT PARI expre PARD .)
    AND             reduce using rule 61 (expre -> INT PARI expre PARD .)
    OR              reduce using rule 61 (expre -> INT PARI expre PARD .)
    THEN            reduce using rule 61 (expre -> INT PARI expre PARD .)


state 112

    (20) linea -> WRITE PARI expre PARD .

    END             reduce using rule 20 (linea -> WRITE PARI expre PARD .)
    PCOMA           reduce using rule 20 (linea -> WRITE PARI expre PARD .)
    ELSE            reduce using rule 20 (linea -> WRITE PARI expre PARD .)


state 113

    (21) linea -> READ PARI location PARD .

    END             reduce using rule 21 (linea -> READ PARI location PARD .)
    PCOMA           reduce using rule 21 (linea -> READ PARI location PARD .)
    ELSE            reduce using rule 21 (linea -> READ PARI location PARD .)


state 114

    (33) location -> ID CORI . expre CORD
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    ID              shift and go to state 35
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    expre                          shift and go to state 128

state 115

    (22) linea -> PRINT PARI STRING PARD .

    END             reduce using rule 22 (linea -> PRINT PARI STRING PARD .)
    PCOMA           reduce using rule 22 (linea -> PRINT PARI STRING PARD .)
    ELSE            reduce using rule 22 (linea -> PRINT PARI STRING PARD .)


state 116

    (27) linea -> WHILE relacion DO linea .

    END             reduce using rule 27 (linea -> WHILE relacion DO linea .)
    PCOMA           reduce using rule 27 (linea -> WHILE relacion DO linea .)
    ELSE            reduce using rule 27 (linea -> WHILE relacion DO linea .)


state 117

    (40) relacion -> relacion AND relacion .
    (40) relacion -> relacion . AND relacion
    (41) relacion -> relacion . OR relacion

    DO              reduce using rule 40 (relacion -> relacion AND relacion .)
    AND             reduce using rule 40 (relacion -> relacion AND relacion .)
    OR              reduce using rule 40 (relacion -> relacion AND relacion .)
    THEN            reduce using rule 40 (relacion -> relacion AND relacion .)
    PARD            reduce using rule 40 (relacion -> relacion AND relacion .)

  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]


state 118

    (41) relacion -> relacion OR relacion .
    (40) relacion -> relacion . AND relacion
    (41) relacion -> relacion . OR relacion

    DO              reduce using rule 41 (relacion -> relacion OR relacion .)
    OR              reduce using rule 41 (relacion -> relacion OR relacion .)
    THEN            reduce using rule 41 (relacion -> relacion OR relacion .)
    PARD            reduce using rule 41 (relacion -> relacion OR relacion .)
    AND             shift and go to state 96

  ! AND             [ reduce using rule 41 (relacion -> relacion OR relacion .) ]
  ! OR              [ shift and go to state 97 ]


state 119

    (34) relacion -> expre LT expre .
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    DO              reduce using rule 34 (relacion -> expre LT expre .)
    AND             reduce using rule 34 (relacion -> expre LT expre .)
    OR              reduce using rule 34 (relacion -> expre LT expre .)
    THEN            reduce using rule 34 (relacion -> expre LT expre .)
    PARD            reduce using rule 34 (relacion -> expre LT expre .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 120

    (35) relacion -> expre LE expre .
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    DO              reduce using rule 35 (relacion -> expre LE expre .)
    AND             reduce using rule 35 (relacion -> expre LE expre .)
    OR              reduce using rule 35 (relacion -> expre LE expre .)
    THEN            reduce using rule 35 (relacion -> expre LE expre .)
    PARD            reduce using rule 35 (relacion -> expre LE expre .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 121

    (36) relacion -> expre GT expre .
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    DO              reduce using rule 36 (relacion -> expre GT expre .)
    AND             reduce using rule 36 (relacion -> expre GT expre .)
    OR              reduce using rule 36 (relacion -> expre GT expre .)
    THEN            reduce using rule 36 (relacion -> expre GT expre .)
    PARD            reduce using rule 36 (relacion -> expre GT expre .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 122

    (37) relacion -> expre GE expre .
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    DO              reduce using rule 37 (relacion -> expre GE expre .)
    AND             reduce using rule 37 (relacion -> expre GE expre .)
    OR              reduce using rule 37 (relacion -> expre GE expre .)
    THEN            reduce using rule 37 (relacion -> expre GE expre .)
    PARD            reduce using rule 37 (relacion -> expre GE expre .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 123

    (38) relacion -> expre EQ expre .
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    DO              reduce using rule 38 (relacion -> expre EQ expre .)
    AND             reduce using rule 38 (relacion -> expre EQ expre .)
    OR              reduce using rule 38 (relacion -> expre EQ expre .)
    THEN            reduce using rule 38 (relacion -> expre EQ expre .)
    PARD            reduce using rule 38 (relacion -> expre EQ expre .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 124

    (39) relacion -> expre NE expre .
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    DO              reduce using rule 39 (relacion -> expre NE expre .)
    AND             reduce using rule 39 (relacion -> expre NE expre .)
    OR              reduce using rule 39 (relacion -> expre NE expre .)
    THEN            reduce using rule 39 (relacion -> expre NE expre .)
    PARD            reduce using rule 39 (relacion -> expre NE expre .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 125

    (43) relacion -> PARI relacion PARD .

    DO              reduce using rule 43 (relacion -> PARI relacion PARD .)
    AND             reduce using rule 43 (relacion -> PARI relacion PARD .)
    OR              reduce using rule 43 (relacion -> PARI relacion PARD .)
    THEN            reduce using rule 43 (relacion -> PARI relacion PARD .)
    PARD            reduce using rule 43 (relacion -> PARI relacion PARD .)


state 126

    (28) linea -> IF relacion THEN linea . else_r
    (30) else_r -> . ELSE linea
    (31) else_r -> . vacio
    (63) vacio -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 130
    END             reduce using rule 63 (vacio -> .)
    PCOMA           reduce using rule 63 (vacio -> .)

  ! ELSE            [ reduce using rule 63 (vacio -> .) ]

    else_r                         shift and go to state 129
    vacio                          shift and go to state 131

state 127

    (48) exprelist -> exprelist COMA expre .
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    PARD            reduce using rule 48 (exprelist -> exprelist COMA expre .)
    COMA            reduce using rule 48 (exprelist -> exprelist COMA expre .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 128

    (33) location -> ID CORI expre . CORD
    (50) expre -> expre . MAS expre
    (51) expre -> expre . MENOS expre
    (52) expre -> expre . MUL expre
    (53) expre -> expre . DIV expre

    CORD            shift and go to state 132
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MUL             shift and go to state 58
    DIV             shift and go to state 59


state 129

    (28) linea -> IF relacion THEN linea else_r .

    END             reduce using rule 28 (linea -> IF relacion THEN linea else_r .)
    PCOMA           reduce using rule 28 (linea -> IF relacion THEN linea else_r .)
    ELSE            reduce using rule 28 (linea -> IF relacion THEN linea else_r .)


state 130

    (30) else_r -> ELSE . linea
    (19) linea -> . expre
    (20) linea -> . WRITE PARI expre PARD
    (21) linea -> . READ PARI location PARD
    (22) linea -> . PRINT PARI STRING PARD
    (23) linea -> . ID ASIG expre
    (24) linea -> . RETURN expre
    (25) linea -> . SKIP
    (26) linea -> . BREAK
    (27) linea -> . WHILE relacion DO linea
    (28) linea -> . IF relacion THEN linea else_r
    (29) linea -> . BEGIN lineas END
    (50) expre -> . expre MAS expre
    (51) expre -> . expre MENOS expre
    (52) expre -> . expre MUL expre
    (53) expre -> . expre DIV expre
    (54) expre -> . MENOS expre
    (55) expre -> . MAS expre
    (56) expre -> . ID PARI exprelist PARD
    (57) expre -> . ID
    (58) expre -> . ID CORI expre CORD
    (59) expre -> . FNUM
    (60) expre -> . INUM
    (61) expre -> . INT PARI expre PARD
    (62) expre -> . FLOAT PARI expre PARD

    WRITE           shift and go to state 45
    READ            shift and go to state 46
    PRINT           shift and go to state 47
    ID              shift and go to state 40
    RETURN          shift and go to state 48
    SKIP            shift and go to state 49
    BREAK           shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52
    BEGIN           shift and go to state 41
    MENOS           shift and go to state 34
    MAS             shift and go to state 33
    FNUM            shift and go to state 36
    INUM            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 31

    linea                          shift and go to state 133
    expre                          shift and go to state 44

state 131

    (31) else_r -> vacio .

    END             reduce using rule 31 (else_r -> vacio .)
    PCOMA           reduce using rule 31 (else_r -> vacio .)
    ELSE            reduce using rule 31 (else_r -> vacio .)


state 132

    (33) location -> ID CORI expre CORD .

    PARD            reduce using rule 33 (location -> ID CORI expre CORD .)


state 133

    (30) else_r -> ELSE linea .

    END             reduce using rule 30 (else_r -> ELSE linea .)
    PCOMA           reduce using rule 30 (else_r -> ELSE linea .)
    ELSE            reduce using rule 30 (else_r -> ELSE linea .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 126 resolved as shift
