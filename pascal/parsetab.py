
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftNOTleftMASMENOSleftMULDIVrightELSEAND ASIG BEGIN BREAK COMA COMEN CORD CORI DIV DO DPUN ELSE END EQ FLOAT FNUM FUN GE GT ID IF INT INUM LE LT MAS MENOS MUL NE NOT OR PARD PARI PCOMA PRINT PUN READ RETURN SKIP STRING THEN WHILE WRITEprograma : funcionlistafuncionlista : funcionfuncionlista : funcionlista funcionfuncion : fundecl ID PARI argumento PARD locales BEGIN lineas ENDfundecl : FUNargumento : vacioargumento : declaraciondeclaracion : decdeclaracion : declaracion COMA declocales : loclist PCOMAlocales : vacioloclist : locloclist : loclist PCOMA locloc : decloc : funciondec : ID DPUN typelineas : linealineas : lineas PCOMA linealinea : exprelinea : WRITE PARI expre PARDlinea : READ PARI location PARDlinea : PRINT PARI STRING PARDlinea : ID ASIG exprelinea : RETURN exprelinea : SKIPlinea : BREAKlinea : WHILE relacion DO linealinea : IF relacion THEN linea else_rlinea : BEGIN lineas ENDelse_r : ELSE lineaelse_r : vaciolocation : IDlocation : ID CORI expre CORDrelacion : expre LT expre\n\t\t\t\t| expre LE expre\n\t\t\t\t| expre GT expre\n\t\t\t\t| expre GE expre\n\t\t\t\t| expre EQ expre\n\t\t\t\t| expre NE expre\n\trelacion : relacion AND relacion\n\t\t\t\t| relacion OR relacion\n\trelacion : NOT relacionrelacion : PARI relacion PARDtype : FLOATtype : INTtype : FLOAT CORI expre CORDtype : INT CORI expre CORDexprelist : exprelist COMA expreexprelist : expreexpre : expre MAS expre\n\t\t\t | expre MENOS expre\n\t\t\t | expre MUL expre\n\t\t\t | expre DIV expre\n\texpre : MENOS expreexpre : MAS expreexpre : ID PARI exprelist PARDexpre : IDexpre : ID CORI expre CORDexpre : FNUMexpre : INUMexpre : INT PARI expre PARDexpre : FLOAT PARI expre PARDvacio :'
    
_lr_action_items = {'FUN':([0,2,3,6,15,30,68,],[5,5,-2,-3,5,5,-4,]),'$end':([1,2,3,6,68,],[0,-1,-2,-3,-4,]),'ID':([4,5,8,15,16,27,28,29,30,33,34,41,48,51,52,54,56,57,58,59,62,63,64,66,69,70,71,76,77,95,96,97,98,99,100,101,102,103,106,109,114,130,],[7,-5,9,9,9,35,35,40,9,35,35,40,35,35,35,35,35,35,35,35,35,35,35,35,40,35,93,35,35,40,35,35,35,35,35,35,35,35,40,35,35,40,]),'PARI':([7,31,35,38,40,45,46,47,51,52,76,77,96,97,],[8,54,62,64,62,70,71,72,77,77,77,77,77,77,]),'PARD':([8,10,11,12,13,17,18,19,26,35,36,37,55,60,61,65,79,80,81,82,83,84,85,87,91,92,93,94,104,105,107,108,110,111,117,118,119,120,121,122,123,124,125,127,132,],[-63,15,-6,-7,-8,-16,-44,-45,-9,-57,-59,-60,-46,-55,-54,-47,107,-50,-51,-52,-53,108,-49,111,112,113,-32,115,-42,125,-62,-56,-58,-61,-40,-41,-34,-35,-36,-37,-38,-39,-43,-48,-33,]),'DPUN':([9,],[14,]),'COMA':([12,13,17,18,19,26,35,36,37,55,60,61,65,80,81,82,83,84,85,107,108,110,111,127,],[16,-8,-16,-44,-45,-9,-57,-59,-60,-46,-55,-54,-47,-50,-51,-52,-53,109,-49,-62,-56,-58,-61,-48,]),'FLOAT':([14,27,28,29,33,34,41,48,51,52,54,56,57,58,59,62,63,64,66,69,70,76,77,95,96,97,98,99,100,101,102,103,106,109,114,130,],[18,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'INT':([14,27,28,29,33,34,41,48,51,52,54,56,57,58,59,62,63,64,66,69,70,76,77,95,96,97,98,99,100,101,102,103,106,109,114,130,],[19,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'BEGIN':([15,20,22,29,30,41,69,95,106,130,],[-63,29,-11,41,-10,41,41,41,41,41,]),'PCOMA':([17,18,19,21,23,24,25,35,36,37,40,42,43,44,49,50,53,55,60,61,65,67,68,73,80,81,82,83,88,89,90,107,108,110,111,112,113,115,116,126,129,131,133,],[-16,-44,-45,30,-12,-14,-15,-57,-59,-60,-57,69,-17,-19,-25,-26,-13,-46,-55,-54,-47,69,-4,-24,-50,-51,-52,-53,-23,-29,-18,-62,-56,-58,-61,-20,-21,-22,-27,-63,-28,-31,-30,]),'CORI':([18,19,35,40,93,],[27,28,63,63,114,]),'MENOS':([27,28,29,32,33,34,35,36,37,39,40,41,44,48,51,52,54,56,57,58,59,60,61,62,63,64,66,69,70,73,75,76,77,79,80,81,82,83,85,86,87,88,91,95,96,97,98,99,100,101,102,103,106,107,108,109,110,111,114,119,120,121,122,123,124,127,128,130,],[34,34,34,57,34,34,-57,-59,-60,57,-57,34,57,34,34,34,34,34,34,34,34,-55,-54,34,34,34,34,34,34,57,57,34,34,57,-50,-51,-52,-53,57,57,57,57,57,34,34,34,34,34,34,34,34,34,34,-62,-56,34,-58,-61,34,57,57,57,57,57,57,57,57,34,]),'MAS':([27,28,29,32,33,34,35,36,37,39,40,41,44,48,51,52,54,56,57,58,59,60,61,62,63,64,66,69,70,73,75,76,77,79,80,81,82,83,85,86,87,88,91,95,96,97,98,99,100,101,102,103,106,107,108,109,110,111,114,119,120,121,122,123,124,127,128,130,],[33,33,33,56,33,33,-57,-59,-60,56,-57,33,56,33,33,33,33,33,33,33,33,-55,-54,33,33,33,33,33,33,56,56,33,33,56,-50,-51,-52,-53,56,56,56,56,56,33,33,33,33,33,33,33,33,33,33,-62,-56,33,-58,-61,33,56,56,56,56,56,56,56,56,33,]),'FNUM':([27,28,29,33,34,41,48,51,52,54,56,57,58,59,62,63,64,66,69,70,76,77,95,96,97,98,99,100,101,102,103,106,109,114,130,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'INUM':([27,28,29,33,34,41,48,51,52,54,56,57,58,59,62,63,64,66,69,70,76,77,95,96,97,98,99,100,101,102,103,106,109,114,130,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'WRITE':([29,41,69,95,106,130,],[45,45,45,45,45,45,]),'READ':([29,41,69,95,106,130,],[46,46,46,46,46,46,]),'PRINT':([29,41,69,95,106,130,],[47,47,47,47,47,47,]),'RETURN':([29,41,69,95,106,130,],[48,48,48,48,48,48,]),'SKIP':([29,41,69,95,106,130,],[49,49,49,49,49,49,]),'BREAK':([29,41,69,95,106,130,],[50,50,50,50,50,50,]),'WHILE':([29,41,69,95,106,130,],[51,51,51,51,51,51,]),'IF':([29,41,69,95,106,130,],[52,52,52,52,52,52,]),'CORD':([32,35,36,37,39,60,61,80,81,82,83,86,107,108,110,111,128,],[55,-57,-59,-60,65,-55,-54,-50,-51,-52,-53,110,-62,-56,-58,-61,132,]),'MUL':([32,35,36,37,39,40,44,60,61,73,75,79,80,81,82,83,85,86,87,88,91,107,108,110,111,119,120,121,122,123,124,127,128,],[58,-57,-59,-60,58,-57,58,58,58,58,58,58,58,58,-52,-53,58,58,58,58,58,-62,-56,-58,-61,58,58,58,58,58,58,58,58,]),'DIV':([32,35,36,37,39,40,44,60,61,73,75,79,80,81,82,83,85,86,87,88,91,107,108,110,111,119,120,121,122,123,124,127,128,],[59,-57,-59,-60,59,-57,59,59,59,59,59,59,59,59,-52,-53,59,59,59,59,59,-62,-56,-58,-61,59,59,59,59,59,59,59,59,]),'END':([35,36,37,40,42,43,44,49,50,60,61,67,73,80,81,82,83,88,89,90,107,108,110,111,112,113,115,116,126,129,131,133,],[-57,-59,-60,-57,68,-17,-19,-25,-26,-55,-54,89,-24,-50,-51,-52,-53,-23,-29,-18,-62,-56,-58,-61,-20,-21,-22,-27,-63,-28,-31,-30,]),'ELSE':([35,36,37,40,44,49,50,60,61,73,80,81,82,83,88,89,107,108,110,111,112,113,115,116,126,129,131,133,],[-57,-59,-60,-57,-19,-25,-26,-55,-54,-24,-50,-51,-52,-53,-23,-29,-62,-56,-58,-61,-20,-21,-22,-27,130,-28,-31,-30,]),'LT':([35,36,37,60,61,75,80,81,82,83,107,108,110,111,],[-57,-59,-60,-55,-54,98,-50,-51,-52,-53,-62,-56,-58,-61,]),'LE':([35,36,37,60,61,75,80,81,82,83,107,108,110,111,],[-57,-59,-60,-55,-54,99,-50,-51,-52,-53,-62,-56,-58,-61,]),'GT':([35,36,37,60,61,75,80,81,82,83,107,108,110,111,],[-57,-59,-60,-55,-54,100,-50,-51,-52,-53,-62,-56,-58,-61,]),'GE':([35,36,37,60,61,75,80,81,82,83,107,108,110,111,],[-57,-59,-60,-55,-54,101,-50,-51,-52,-53,-62,-56,-58,-61,]),'EQ':([35,36,37,60,61,75,80,81,82,83,107,108,110,111,],[-57,-59,-60,-55,-54,102,-50,-51,-52,-53,-62,-56,-58,-61,]),'NE':([35,36,37,60,61,75,80,81,82,83,107,108,110,111,],[-57,-59,-60,-55,-54,103,-50,-51,-52,-53,-62,-56,-58,-61,]),'DO':([35,36,37,60,61,74,80,81,82,83,104,107,108,110,111,117,118,119,120,121,122,123,124,125,],[-57,-59,-60,-55,-54,95,-50,-51,-52,-53,-42,-62,-56,-58,-61,-40,-41,-34,-35,-36,-37,-38,-39,-43,]),'AND':([35,36,37,60,61,74,78,80,81,82,83,104,105,107,108,110,111,117,118,119,120,121,122,123,124,125,],[-57,-59,-60,-55,-54,96,96,-50,-51,-52,-53,-42,96,-62,-56,-58,-61,-40,96,-34,-35,-36,-37,-38,-39,-43,]),'OR':([35,36,37,60,61,74,78,80,81,82,83,104,105,107,108,110,111,117,118,119,120,121,122,123,124,125,],[-57,-59,-60,-55,-54,97,97,-50,-51,-52,-53,-42,97,-62,-56,-58,-61,-40,-41,-34,-35,-36,-37,-38,-39,-43,]),'THEN':([35,36,37,60,61,78,80,81,82,83,104,107,108,110,111,117,118,119,120,121,122,123,124,125,],[-57,-59,-60,-55,-54,106,-50,-51,-52,-53,-42,-62,-56,-58,-61,-40,-41,-34,-35,-36,-37,-38,-39,-43,]),'ASIG':([40,],[66,]),'NOT':([51,52,76,77,96,97,],[76,76,76,76,76,76,]),'STRING':([72,],[94,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'funcionlista':([0,],[2,]),'funcion':([0,2,15,30,],[3,6,25,25,]),'fundecl':([0,2,15,30,],[4,4,4,4,]),'argumento':([8,],[10,]),'vacio':([8,15,126,],[11,22,131,]),'declaracion':([8,],[12,]),'dec':([8,15,16,30,],[13,24,26,24,]),'type':([14,],[17,]),'locales':([15,],[20,]),'loclist':([15,],[21,]),'loc':([15,30,],[23,53,]),'expre':([27,28,29,33,34,41,48,51,52,54,56,57,58,59,62,63,64,66,69,70,76,77,95,96,97,98,99,100,101,102,103,106,109,114,130,],[32,39,44,60,61,44,73,75,75,79,80,81,82,83,85,86,87,88,44,91,75,75,44,75,75,119,120,121,122,123,124,44,127,128,44,]),'lineas':([29,41,],[42,67,]),'linea':([29,41,69,95,106,130,],[43,43,90,116,126,133,]),'relacion':([51,52,76,77,96,97,],[74,78,104,105,117,118,]),'exprelist':([62,],[84,]),'location':([71,],[92,]),'else_r':([126,],[129,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> funcionlista','programa',1,'p_programa_0','parser.py',82),
  ('funcionlista -> funcion','funcionlista',1,'p_funcionlista_1','parser.py',90),
  ('funcionlista -> funcionlista funcion','funcionlista',2,'p_funcionlista_2','parser.py',94),
  ('funcion -> fundecl ID PARI argumento PARD locales BEGIN lineas END','funcion',9,'p_funcion','parser.py',103),
  ('fundecl -> FUN','fundecl',1,'p_fundecl','parser.py',109),
  ('argumento -> vacio','argumento',1,'p_argumento_0','parser.py',118),
  ('argumento -> declaracion','argumento',1,'p_argumento_1','parser.py',122),
  ('declaracion -> dec','declaracion',1,'p_declaracion_0','parser.py',130),
  ('declaracion -> declaracion COMA dec','declaracion',3,'p_declaracion_1','parser.py',134),
  ('locales -> loclist PCOMA','locales',2,'p_locales_0','parser.py',143),
  ('locales -> vacio','locales',1,'p_locales_1','parser.py',147),
  ('loclist -> loc','loclist',1,'p_loclist_0','parser.py',155),
  ('loclist -> loclist PCOMA loc','loclist',3,'p_loclist_2','parser.py',160),
  ('loc -> dec','loc',1,'p_loc_0','parser.py',169),
  ('loc -> funcion','loc',1,'p_loc_1','parser.py',173),
  ('dec -> ID DPUN type','dec',3,'p_dec','parser.py',181),
  ('lineas -> linea','lineas',1,'p_lineas_0','parser.py',198),
  ('lineas -> lineas PCOMA linea','lineas',3,'p_lineas_1','parser.py',202),
  ('linea -> expre','linea',1,'p_linea_0','parser.py',211),
  ('linea -> WRITE PARI expre PARD','linea',4,'p_linea_1','parser.py',215),
  ('linea -> READ PARI location PARD','linea',4,'p_linea_2','parser.py',219),
  ('linea -> PRINT PARI STRING PARD','linea',4,'p_linea_3','parser.py',223),
  ('linea -> ID ASIG expre','linea',3,'p_linea_4','parser.py',227),
  ('linea -> RETURN expre','linea',2,'p_linea_5','parser.py',244),
  ('linea -> SKIP','linea',1,'p_linea_7','parser.py',248),
  ('linea -> BREAK','linea',1,'p_linea_8','parser.py',252),
  ('linea -> WHILE relacion DO linea','linea',4,'p_linea_9','parser.py',256),
  ('linea -> IF relacion THEN linea else_r','linea',5,'p_linea_10','parser.py',260),
  ('linea -> BEGIN lineas END','linea',3,'p_linea_11','parser.py',264),
  ('else_r -> ELSE linea','else_r',2,'p_else_0','parser.py',272),
  ('else_r -> vacio','else_r',1,'p_else_1','parser.py',276),
  ('location -> ID','location',1,'p_location_1','parser.py',285),
  ('location -> ID CORI expre CORD','location',4,'p_location_2','parser.py',297),
  ('relacion -> expre LT expre','relacion',3,'p_relacion','parser.py',325),
  ('relacion -> expre LE expre','relacion',3,'p_relacion','parser.py',326),
  ('relacion -> expre GT expre','relacion',3,'p_relacion','parser.py',327),
  ('relacion -> expre GE expre','relacion',3,'p_relacion','parser.py',328),
  ('relacion -> expre EQ expre','relacion',3,'p_relacion','parser.py',329),
  ('relacion -> expre NE expre','relacion',3,'p_relacion','parser.py',330),
  ('relacion -> relacion AND relacion','relacion',3,'p_relacion_1','parser.py',339),
  ('relacion -> relacion OR relacion','relacion',3,'p_relacion_1','parser.py',340),
  ('relacion -> NOT relacion','relacion',2,'p_relacion_not','parser.py',345),
  ('relacion -> PARI relacion PARD','relacion',3,'p_relacion_parent','parser.py',349),
  ('type -> FLOAT','type',1,'p_type_f','parser.py',357),
  ('type -> INT','type',1,'p_type_i','parser.py',362),
  ('type -> FLOAT CORI expre CORD','type',4,'p_type_fa','parser.py',367),
  ('type -> INT CORI expre CORD','type',4,'p_type_ia','parser.py',377),
  ('exprelist -> exprelist COMA expre','exprelist',3,'p_exprelist_coma','parser.py',390),
  ('exprelist -> expre','exprelist',1,'p_exprelist_','parser.py',395),
  ('expre -> expre MAS expre','expre',3,'p_expre','parser.py',404),
  ('expre -> expre MENOS expre','expre',3,'p_expre','parser.py',405),
  ('expre -> expre MUL expre','expre',3,'p_expre','parser.py',406),
  ('expre -> expre DIV expre','expre',3,'p_expre','parser.py',407),
  ('expre -> MENOS expre','expre',2,'p_expre_menosu','parser.py',416),
  ('expre -> MAS expre','expre',2,'p_expre_masu','parser.py',421),
  ('expre -> ID PARI exprelist PARD','expre',4,'p_expre_call','parser.py',426),
  ('expre -> ID','expre',1,'p_expre_id','parser.py',437),
  ('expre -> ID CORI expre CORD','expre',4,'p_expre_array','parser.py',453),
  ('expre -> FNUM','expre',1,'p_expre_fnum','parser.py',471),
  ('expre -> INUM','expre',1,'p_expre_inum','parser.py',477),
  ('expre -> INT PARI expre PARD','expre',4,'p_expre_cast_int','parser.py',483),
  ('expre -> FLOAT PARI expre PARD','expre',4,'p_expre_cast_float','parser.py',490),
  ('vacio -> <empty>','vacio',0,'p_vacio','parser.py',503),
]
