Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statement
Rule 3     statements -> statement statements
Rule 4     statement -> function_definition
Rule 5     statement -> assignment_statement
Rule 6     statement -> expression_statement
Rule 7     statement -> return_statement
Rule 8     function_definition -> DEF IDENTIFIER LPAREN opt_parameter_list RPAREN COLON block
Rule 9     return_statement -> RETURN expression SEMICOLON
Rule 10    block -> LBRACE statements RBRACE
Rule 11    block -> statement
Rule 12    opt_parameter_list -> parameter_list
Rule 13    opt_parameter_list -> empty
Rule 14    parameter_list -> IDENTIFIER
Rule 15    parameter_list -> IDENTIFIER COMMA parameter_list
Rule 16    assignment_statement -> IDENTIFIER EQUALS expression SEMICOLON
Rule 17    expression_statement -> expression SEMICOLON
Rule 18    expression -> term
Rule 19    expression -> expression PLUS term
Rule 20    expression -> expression MINUS term
Rule 21    expression -> IDENTIFIER LPAREN opt_argument_list RPAREN
Rule 22    opt_argument_list -> argument_list
Rule 23    opt_argument_list -> empty
Rule 24    argument_list -> expression
Rule 25    argument_list -> expression COMMA argument_list
Rule 26    term -> factor
Rule 27    term -> term TIMES factor
Rule 28    term -> term DIVIDE factor
Rule 29    factor -> NUMBER
Rule 30    factor -> float_literal
Rule 31    factor -> string_literal
Rule 32    factor -> IDENTIFIER
Rule 33    factor -> LPAREN expression RPAREN
Rule 34    float_literal -> FLOAT
Rule 35    newline -> NEWLINE
Rule 36    string_literal -> STRING
Rule 37    empty -> <empty>

Terminals, with rules where they appear

COLON                : 8
COMMA                : 15 25
DEF                  : 8
DIVIDE               : 28
EQUALS               : 16
FLOAT                : 34
IDENTIFIER           : 8 14 15 16 21 32
LBRACE               : 10
LPAREN               : 8 21 33
MINUS                : 20
NEWLINE              : 35
NUMBER               : 29
PLUS                 : 19
RBRACE               : 10
RETURN               : 9
RPAREN               : 8 21 33
SEMICOLON            : 9 16 17
STRING               : 36
TIMES                : 27
error                : 

Nonterminals, with rules where they appear

argument_list        : 22 25
assignment_statement : 5
block                : 8
empty                : 13 23
expression           : 9 16 17 19 20 24 25 33
expression_statement : 6
factor               : 26 27 28
float_literal        : 30
function_definition  : 4
newline              : 
opt_argument_list    : 21
opt_parameter_list   : 8
parameter_list       : 12 15
program              : 0
return_statement     : 7
statement            : 2 3 11
statements           : 1 3 10
string_literal       : 31
term                 : 18 19 20 27 28

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statement
    (3) statements -> . statement statements
    (4) statement -> . function_definition
    (5) statement -> . assignment_statement
    (6) statement -> . expression_statement
    (7) statement -> . return_statement
    (8) function_definition -> . DEF IDENTIFIER LPAREN opt_parameter_list RPAREN COLON block
    (16) assignment_statement -> . IDENTIFIER EQUALS expression SEMICOLON
    (17) expression_statement -> . expression SEMICOLON
    (9) return_statement -> . RETURN expression SEMICOLON
    (18) expression -> . term
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . IDENTIFIER LPAREN opt_argument_list RPAREN
    (26) term -> . factor
    (27) term -> . term TIMES factor
    (28) term -> . term DIVIDE factor
    (29) factor -> . NUMBER
    (30) factor -> . float_literal
    (31) factor -> . string_literal
    (32) factor -> . IDENTIFIER
    (33) factor -> . LPAREN expression RPAREN
    (34) float_literal -> . FLOAT
    (36) string_literal -> . STRING

    DEF             shift and go to state 8
    IDENTIFIER      shift and go to state 9
    RETURN          shift and go to state 12
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 10
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    function_definition            shift and go to state 4
    assignment_statement           shift and go to state 5
    expression_statement           shift and go to state 6
    return_statement               shift and go to state 7
    expression                     shift and go to state 11
    term                           shift and go to state 13
    factor                         shift and go to state 14
    float_literal                  shift and go to state 16
    string_literal                 shift and go to state 17

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .

    $end            reduce using rule 1 (program -> statements .)


state 3

    (2) statements -> statement .
    (3) statements -> statement . statements
    (2) statements -> . statement
    (3) statements -> . statement statements
    (4) statement -> . function_definition
    (5) statement -> . assignment_statement
    (6) statement -> . expression_statement
    (7) statement -> . return_statement
    (8) function_definition -> . DEF IDENTIFIER LPAREN opt_parameter_list RPAREN COLON block
    (16) assignment_statement -> . IDENTIFIER EQUALS expression SEMICOLON
    (17) expression_statement -> . expression SEMICOLON
    (9) return_statement -> . RETURN expression SEMICOLON
    (18) expression -> . term
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . IDENTIFIER LPAREN opt_argument_list RPAREN
    (26) term -> . factor
    (27) term -> . term TIMES factor
    (28) term -> . term DIVIDE factor
    (29) factor -> . NUMBER
    (30) factor -> . float_literal
    (31) factor -> . string_literal
    (32) factor -> . IDENTIFIER
    (33) factor -> . LPAREN expression RPAREN
    (34) float_literal -> . FLOAT
    (36) string_literal -> . STRING

    $end            reduce using rule 2 (statements -> statement .)
    RBRACE          reduce using rule 2 (statements -> statement .)
    DEF             shift and go to state 8
    IDENTIFIER      shift and go to state 9
    RETURN          shift and go to state 12
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 10
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    statement                      shift and go to state 3
    statements                     shift and go to state 20
    function_definition            shift and go to state 4
    assignment_statement           shift and go to state 5
    expression_statement           shift and go to state 6
    return_statement               shift and go to state 7
    expression                     shift and go to state 11
    term                           shift and go to state 13
    factor                         shift and go to state 14
    float_literal                  shift and go to state 16
    string_literal                 shift and go to state 17

state 4

    (4) statement -> function_definition .

    DEF             reduce using rule 4 (statement -> function_definition .)
    IDENTIFIER      reduce using rule 4 (statement -> function_definition .)
    RETURN          reduce using rule 4 (statement -> function_definition .)
    NUMBER          reduce using rule 4 (statement -> function_definition .)
    LPAREN          reduce using rule 4 (statement -> function_definition .)
    FLOAT           reduce using rule 4 (statement -> function_definition .)
    STRING          reduce using rule 4 (statement -> function_definition .)
    $end            reduce using rule 4 (statement -> function_definition .)
    RBRACE          reduce using rule 4 (statement -> function_definition .)


state 5

    (5) statement -> assignment_statement .

    DEF             reduce using rule 5 (statement -> assignment_statement .)
    IDENTIFIER      reduce using rule 5 (statement -> assignment_statement .)
    RETURN          reduce using rule 5 (statement -> assignment_statement .)
    NUMBER          reduce using rule 5 (statement -> assignment_statement .)
    LPAREN          reduce using rule 5 (statement -> assignment_statement .)
    FLOAT           reduce using rule 5 (statement -> assignment_statement .)
    STRING          reduce using rule 5 (statement -> assignment_statement .)
    $end            reduce using rule 5 (statement -> assignment_statement .)
    RBRACE          reduce using rule 5 (statement -> assignment_statement .)


state 6

    (6) statement -> expression_statement .

    DEF             reduce using rule 6 (statement -> expression_statement .)
    IDENTIFIER      reduce using rule 6 (statement -> expression_statement .)
    RETURN          reduce using rule 6 (statement -> expression_statement .)
    NUMBER          reduce using rule 6 (statement -> expression_statement .)
    LPAREN          reduce using rule 6 (statement -> expression_statement .)
    FLOAT           reduce using rule 6 (statement -> expression_statement .)
    STRING          reduce using rule 6 (statement -> expression_statement .)
    $end            reduce using rule 6 (statement -> expression_statement .)
    RBRACE          reduce using rule 6 (statement -> expression_statement .)


state 7

    (7) statement -> return_statement .

    DEF             reduce using rule 7 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 7 (statement -> return_statement .)
    RETURN          reduce using rule 7 (statement -> return_statement .)
    NUMBER          reduce using rule 7 (statement -> return_statement .)
    LPAREN          reduce using rule 7 (statement -> return_statement .)
    FLOAT           reduce using rule 7 (statement -> return_statement .)
    STRING          reduce using rule 7 (statement -> return_statement .)
    $end            reduce using rule 7 (statement -> return_statement .)
    RBRACE          reduce using rule 7 (statement -> return_statement .)


state 8

    (8) function_definition -> DEF . IDENTIFIER LPAREN opt_parameter_list RPAREN COLON block

    IDENTIFIER      shift and go to state 21


state 9

    (16) assignment_statement -> IDENTIFIER . EQUALS expression SEMICOLON
    (21) expression -> IDENTIFIER . LPAREN opt_argument_list RPAREN
    (32) factor -> IDENTIFIER .

    EQUALS          shift and go to state 22
    LPAREN          shift and go to state 23
    TIMES           reduce using rule 32 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 32 (factor -> IDENTIFIER .)
    SEMICOLON       reduce using rule 32 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 32 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 32 (factor -> IDENTIFIER .)


state 10

    (33) factor -> LPAREN . expression RPAREN
    (18) expression -> . term
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . IDENTIFIER LPAREN opt_argument_list RPAREN
    (26) term -> . factor
    (27) term -> . term TIMES factor
    (28) term -> . term DIVIDE factor
    (29) factor -> . NUMBER
    (30) factor -> . float_literal
    (31) factor -> . string_literal
    (32) factor -> . IDENTIFIER
    (33) factor -> . LPAREN expression RPAREN
    (34) float_literal -> . FLOAT
    (36) string_literal -> . STRING

    IDENTIFIER      shift and go to state 25
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 10
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 24
    term                           shift and go to state 13
    factor                         shift and go to state 14
    float_literal                  shift and go to state 16
    string_literal                 shift and go to state 17

state 11

    (17) expression_statement -> expression . SEMICOLON
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 26
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 12

    (9) return_statement -> RETURN . expression SEMICOLON
    (18) expression -> . term
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . IDENTIFIER LPAREN opt_argument_list RPAREN
    (26) term -> . factor
    (27) term -> . term TIMES factor
    (28) term -> . term DIVIDE factor
    (29) factor -> . NUMBER
    (30) factor -> . float_literal
    (31) factor -> . string_literal
    (32) factor -> . IDENTIFIER
    (33) factor -> . LPAREN expression RPAREN
    (34) float_literal -> . FLOAT
    (36) string_literal -> . STRING

    IDENTIFIER      shift and go to state 25
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 10
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 29
    term                           shift and go to state 13
    factor                         shift and go to state 14
    float_literal                  shift and go to state 16
    string_literal                 shift and go to state 17

state 13

    (18) expression -> term .
    (27) term -> term . TIMES factor
    (28) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 18 (expression -> term .)
    PLUS            reduce using rule 18 (expression -> term .)
    MINUS           reduce using rule 18 (expression -> term .)
    RPAREN          reduce using rule 18 (expression -> term .)
    COMMA           reduce using rule 18 (expression -> term .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31


state 14

    (26) term -> factor .

    TIMES           reduce using rule 26 (term -> factor .)
    DIVIDE          reduce using rule 26 (term -> factor .)
    SEMICOLON       reduce using rule 26 (term -> factor .)
    PLUS            reduce using rule 26 (term -> factor .)
    MINUS           reduce using rule 26 (term -> factor .)
    RPAREN          reduce using rule 26 (term -> factor .)
    COMMA           reduce using rule 26 (term -> factor .)


state 15

    (29) factor -> NUMBER .

    TIMES           reduce using rule 29 (factor -> NUMBER .)
    DIVIDE          reduce using rule 29 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 29 (factor -> NUMBER .)
    PLUS            reduce using rule 29 (factor -> NUMBER .)
    MINUS           reduce using rule 29 (factor -> NUMBER .)
    RPAREN          reduce using rule 29 (factor -> NUMBER .)
    COMMA           reduce using rule 29 (factor -> NUMBER .)


state 16

    (30) factor -> float_literal .

    TIMES           reduce using rule 30 (factor -> float_literal .)
    DIVIDE          reduce using rule 30 (factor -> float_literal .)
    SEMICOLON       reduce using rule 30 (factor -> float_literal .)
    PLUS            reduce using rule 30 (factor -> float_literal .)
    MINUS           reduce using rule 30 (factor -> float_literal .)
    RPAREN          reduce using rule 30 (factor -> float_literal .)
    COMMA           reduce using rule 30 (factor -> float_literal .)


state 17

    (31) factor -> string_literal .

    TIMES           reduce using rule 31 (factor -> string_literal .)
    DIVIDE          reduce using rule 31 (factor -> string_literal .)
    SEMICOLON       reduce using rule 31 (factor -> string_literal .)
    PLUS            reduce using rule 31 (factor -> string_literal .)
    MINUS           reduce using rule 31 (factor -> string_literal .)
    RPAREN          reduce using rule 31 (factor -> string_literal .)
    COMMA           reduce using rule 31 (factor -> string_literal .)


state 18

    (34) float_literal -> FLOAT .

    TIMES           reduce using rule 34 (float_literal -> FLOAT .)
    DIVIDE          reduce using rule 34 (float_literal -> FLOAT .)
    SEMICOLON       reduce using rule 34 (float_literal -> FLOAT .)
    PLUS            reduce using rule 34 (float_literal -> FLOAT .)
    MINUS           reduce using rule 34 (float_literal -> FLOAT .)
    RPAREN          reduce using rule 34 (float_literal -> FLOAT .)
    COMMA           reduce using rule 34 (float_literal -> FLOAT .)


state 19

    (36) string_literal -> STRING .

    TIMES           reduce using rule 36 (string_literal -> STRING .)
    DIVIDE          reduce using rule 36 (string_literal -> STRING .)
    SEMICOLON       reduce using rule 36 (string_literal -> STRING .)
    PLUS            reduce using rule 36 (string_literal -> STRING .)
    MINUS           reduce using rule 36 (string_literal -> STRING .)
    RPAREN          reduce using rule 36 (string_literal -> STRING .)
    COMMA           reduce using rule 36 (string_literal -> STRING .)


state 20

    (3) statements -> statement statements .

    $end            reduce using rule 3 (statements -> statement statements .)
    RBRACE          reduce using rule 3 (statements -> statement statements .)


state 21

    (8) function_definition -> DEF IDENTIFIER . LPAREN opt_parameter_list RPAREN COLON block

    LPAREN          shift and go to state 32


state 22

    (16) assignment_statement -> IDENTIFIER EQUALS . expression SEMICOLON
    (18) expression -> . term
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . IDENTIFIER LPAREN opt_argument_list RPAREN
    (26) term -> . factor
    (27) term -> . term TIMES factor
    (28) term -> . term DIVIDE factor
    (29) factor -> . NUMBER
    (30) factor -> . float_literal
    (31) factor -> . string_literal
    (32) factor -> . IDENTIFIER
    (33) factor -> . LPAREN expression RPAREN
    (34) float_literal -> . FLOAT
    (36) string_literal -> . STRING

    IDENTIFIER      shift and go to state 25
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 10
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 33
    term                           shift and go to state 13
    factor                         shift and go to state 14
    float_literal                  shift and go to state 16
    string_literal                 shift and go to state 17

state 23

    (21) expression -> IDENTIFIER LPAREN . opt_argument_list RPAREN
    (22) opt_argument_list -> . argument_list
    (23) opt_argument_list -> . empty
    (24) argument_list -> . expression
    (25) argument_list -> . expression COMMA argument_list
    (37) empty -> .
    (18) expression -> . term
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . IDENTIFIER LPAREN opt_argument_list RPAREN
    (26) term -> . factor
    (27) term -> . term TIMES factor
    (28) term -> . term DIVIDE factor
    (29) factor -> . NUMBER
    (30) factor -> . float_literal
    (31) factor -> . string_literal
    (32) factor -> . IDENTIFIER
    (33) factor -> . LPAREN expression RPAREN
    (34) float_literal -> . FLOAT
    (36) string_literal -> . STRING

    RPAREN          reduce using rule 37 (empty -> .)
    IDENTIFIER      shift and go to state 25
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 10
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    opt_argument_list              shift and go to state 34
    argument_list                  shift and go to state 35
    empty                          shift and go to state 36
    expression                     shift and go to state 37
    term                           shift and go to state 13
    factor                         shift and go to state 14
    float_literal                  shift and go to state 16
    string_literal                 shift and go to state 17

state 24

    (33) factor -> LPAREN expression . RPAREN
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    RPAREN          shift and go to state 38
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 25

    (21) expression -> IDENTIFIER . LPAREN opt_argument_list RPAREN
    (32) factor -> IDENTIFIER .

    LPAREN          shift and go to state 23
    TIMES           reduce using rule 32 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 32 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 32 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 32 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 32 (factor -> IDENTIFIER .)
    SEMICOLON       reduce using rule 32 (factor -> IDENTIFIER .)
    COMMA           reduce using rule 32 (factor -> IDENTIFIER .)


state 26

    (17) expression_statement -> expression SEMICOLON .

    DEF             reduce using rule 17 (expression_statement -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 17 (expression_statement -> expression SEMICOLON .)
    RETURN          reduce using rule 17 (expression_statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 17 (expression_statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 17 (expression_statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 17 (expression_statement -> expression SEMICOLON .)
    STRING          reduce using rule 17 (expression_statement -> expression SEMICOLON .)
    $end            reduce using rule 17 (expression_statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 17 (expression_statement -> expression SEMICOLON .)


state 27

    (19) expression -> expression PLUS . term
    (26) term -> . factor
    (27) term -> . term TIMES factor
    (28) term -> . term DIVIDE factor
    (29) factor -> . NUMBER
    (30) factor -> . float_literal
    (31) factor -> . string_literal
    (32) factor -> . IDENTIFIER
    (33) factor -> . LPAREN expression RPAREN
    (34) float_literal -> . FLOAT
    (36) string_literal -> . STRING

    NUMBER          shift and go to state 15
    IDENTIFIER      shift and go to state 40
    LPAREN          shift and go to state 10
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    term                           shift and go to state 39
    factor                         shift and go to state 14
    float_literal                  shift and go to state 16
    string_literal                 shift and go to state 17

state 28

    (20) expression -> expression MINUS . term
    (26) term -> . factor
    (27) term -> . term TIMES factor
    (28) term -> . term DIVIDE factor
    (29) factor -> . NUMBER
    (30) factor -> . float_literal
    (31) factor -> . string_literal
    (32) factor -> . IDENTIFIER
    (33) factor -> . LPAREN expression RPAREN
    (34) float_literal -> . FLOAT
    (36) string_literal -> . STRING

    NUMBER          shift and go to state 15
    IDENTIFIER      shift and go to state 40
    LPAREN          shift and go to state 10
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    term                           shift and go to state 41
    factor                         shift and go to state 14
    float_literal                  shift and go to state 16
    string_literal                 shift and go to state 17

state 29

    (9) return_statement -> RETURN expression . SEMICOLON
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 42
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 30

    (27) term -> term TIMES . factor
    (29) factor -> . NUMBER
    (30) factor -> . float_literal
    (31) factor -> . string_literal
    (32) factor -> . IDENTIFIER
    (33) factor -> . LPAREN expression RPAREN
    (34) float_literal -> . FLOAT
    (36) string_literal -> . STRING

    NUMBER          shift and go to state 15
    IDENTIFIER      shift and go to state 40
    LPAREN          shift and go to state 10
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    factor                         shift and go to state 43
    float_literal                  shift and go to state 16
    string_literal                 shift and go to state 17

state 31

    (28) term -> term DIVIDE . factor
    (29) factor -> . NUMBER
    (30) factor -> . float_literal
    (31) factor -> . string_literal
    (32) factor -> . IDENTIFIER
    (33) factor -> . LPAREN expression RPAREN
    (34) float_literal -> . FLOAT
    (36) string_literal -> . STRING

    NUMBER          shift and go to state 15
    IDENTIFIER      shift and go to state 40
    LPAREN          shift and go to state 10
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    factor                         shift and go to state 44
    float_literal                  shift and go to state 16
    string_literal                 shift and go to state 17

state 32

    (8) function_definition -> DEF IDENTIFIER LPAREN . opt_parameter_list RPAREN COLON block
    (12) opt_parameter_list -> . parameter_list
    (13) opt_parameter_list -> . empty
    (14) parameter_list -> . IDENTIFIER
    (15) parameter_list -> . IDENTIFIER COMMA parameter_list
    (37) empty -> .

    IDENTIFIER      shift and go to state 45
    RPAREN          reduce using rule 37 (empty -> .)

    opt_parameter_list             shift and go to state 46
    parameter_list                 shift and go to state 47
    empty                          shift and go to state 48

state 33

    (16) assignment_statement -> IDENTIFIER EQUALS expression . SEMICOLON
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 49
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 34

    (21) expression -> IDENTIFIER LPAREN opt_argument_list . RPAREN

    RPAREN          shift and go to state 50


state 35

    (22) opt_argument_list -> argument_list .

    RPAREN          reduce using rule 22 (opt_argument_list -> argument_list .)


state 36

    (23) opt_argument_list -> empty .

    RPAREN          reduce using rule 23 (opt_argument_list -> empty .)


state 37

    (24) argument_list -> expression .
    (25) argument_list -> expression . COMMA argument_list
    (19) expression -> expression . PLUS term
    (20) expression -> expression . MINUS term

    RPAREN          reduce using rule 24 (argument_list -> expression .)
    COMMA           shift and go to state 51
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 38

    (33) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 33 (factor -> LPAREN expression RPAREN .)


state 39

    (19) expression -> expression PLUS term .
    (27) term -> term . TIMES factor
    (28) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 19 (expression -> expression PLUS term .)
    PLUS            reduce using rule 19 (expression -> expression PLUS term .)
    MINUS           reduce using rule 19 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 19 (expression -> expression PLUS term .)
    COMMA           reduce using rule 19 (expression -> expression PLUS term .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31


state 40

    (32) factor -> IDENTIFIER .

    TIMES           reduce using rule 32 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 32 (factor -> IDENTIFIER .)
    SEMICOLON       reduce using rule 32 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 32 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 32 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 32 (factor -> IDENTIFIER .)
    COMMA           reduce using rule 32 (factor -> IDENTIFIER .)


state 41

    (20) expression -> expression MINUS term .
    (27) term -> term . TIMES factor
    (28) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 20 (expression -> expression MINUS term .)
    PLUS            reduce using rule 20 (expression -> expression MINUS term .)
    MINUS           reduce using rule 20 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 20 (expression -> expression MINUS term .)
    COMMA           reduce using rule 20 (expression -> expression MINUS term .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31


state 42

    (9) return_statement -> RETURN expression SEMICOLON .

    DEF             reduce using rule 9 (return_statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 9 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 9 (return_statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 9 (return_statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 9 (return_statement -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 9 (return_statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 9 (return_statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 9 (return_statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 9 (return_statement -> RETURN expression SEMICOLON .)


state 43

    (27) term -> term TIMES factor .

    TIMES           reduce using rule 27 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 27 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 27 (term -> term TIMES factor .)
    PLUS            reduce using rule 27 (term -> term TIMES factor .)
    MINUS           reduce using rule 27 (term -> term TIMES factor .)
    RPAREN          reduce using rule 27 (term -> term TIMES factor .)
    COMMA           reduce using rule 27 (term -> term TIMES factor .)


state 44

    (28) term -> term DIVIDE factor .

    TIMES           reduce using rule 28 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 28 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 28 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 28 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 28 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 28 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 28 (term -> term DIVIDE factor .)


state 45

    (14) parameter_list -> IDENTIFIER .
    (15) parameter_list -> IDENTIFIER . COMMA parameter_list

    RPAREN          reduce using rule 14 (parameter_list -> IDENTIFIER .)
    COMMA           shift and go to state 52


state 46

    (8) function_definition -> DEF IDENTIFIER LPAREN opt_parameter_list . RPAREN COLON block

    RPAREN          shift and go to state 53


state 47

    (12) opt_parameter_list -> parameter_list .

    RPAREN          reduce using rule 12 (opt_parameter_list -> parameter_list .)


state 48

    (13) opt_parameter_list -> empty .

    RPAREN          reduce using rule 13 (opt_parameter_list -> empty .)


state 49

    (16) assignment_statement -> IDENTIFIER EQUALS expression SEMICOLON .

    DEF             reduce using rule 16 (assignment_statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 16 (assignment_statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 16 (assignment_statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 16 (assignment_statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 16 (assignment_statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 16 (assignment_statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    STRING          reduce using rule 16 (assignment_statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    $end            reduce using rule 16 (assignment_statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 16 (assignment_statement -> IDENTIFIER EQUALS expression SEMICOLON .)


state 50

    (21) expression -> IDENTIFIER LPAREN opt_argument_list RPAREN .

    SEMICOLON       reduce using rule 21 (expression -> IDENTIFIER LPAREN opt_argument_list RPAREN .)
    PLUS            reduce using rule 21 (expression -> IDENTIFIER LPAREN opt_argument_list RPAREN .)
    MINUS           reduce using rule 21 (expression -> IDENTIFIER LPAREN opt_argument_list RPAREN .)
    RPAREN          reduce using rule 21 (expression -> IDENTIFIER LPAREN opt_argument_list RPAREN .)
    COMMA           reduce using rule 21 (expression -> IDENTIFIER LPAREN opt_argument_list RPAREN .)


state 51

    (25) argument_list -> expression COMMA . argument_list
    (24) argument_list -> . expression
    (25) argument_list -> . expression COMMA argument_list
    (18) expression -> . term
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . IDENTIFIER LPAREN opt_argument_list RPAREN
    (26) term -> . factor
    (27) term -> . term TIMES factor
    (28) term -> . term DIVIDE factor
    (29) factor -> . NUMBER
    (30) factor -> . float_literal
    (31) factor -> . string_literal
    (32) factor -> . IDENTIFIER
    (33) factor -> . LPAREN expression RPAREN
    (34) float_literal -> . FLOAT
    (36) string_literal -> . STRING

    IDENTIFIER      shift and go to state 25
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 10
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    expression                     shift and go to state 37
    argument_list                  shift and go to state 54
    term                           shift and go to state 13
    factor                         shift and go to state 14
    float_literal                  shift and go to state 16
    string_literal                 shift and go to state 17

state 52

    (15) parameter_list -> IDENTIFIER COMMA . parameter_list
    (14) parameter_list -> . IDENTIFIER
    (15) parameter_list -> . IDENTIFIER COMMA parameter_list

    IDENTIFIER      shift and go to state 45

    parameter_list                 shift and go to state 55

state 53

    (8) function_definition -> DEF IDENTIFIER LPAREN opt_parameter_list RPAREN . COLON block

    COLON           shift and go to state 56


state 54

    (25) argument_list -> expression COMMA argument_list .

    RPAREN          reduce using rule 25 (argument_list -> expression COMMA argument_list .)


state 55

    (15) parameter_list -> IDENTIFIER COMMA parameter_list .

    RPAREN          reduce using rule 15 (parameter_list -> IDENTIFIER COMMA parameter_list .)


state 56

    (8) function_definition -> DEF IDENTIFIER LPAREN opt_parameter_list RPAREN COLON . block
    (10) block -> . LBRACE statements RBRACE
    (11) block -> . statement
    (4) statement -> . function_definition
    (5) statement -> . assignment_statement
    (6) statement -> . expression_statement
    (7) statement -> . return_statement
    (8) function_definition -> . DEF IDENTIFIER LPAREN opt_parameter_list RPAREN COLON block
    (16) assignment_statement -> . IDENTIFIER EQUALS expression SEMICOLON
    (17) expression_statement -> . expression SEMICOLON
    (9) return_statement -> . RETURN expression SEMICOLON
    (18) expression -> . term
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . IDENTIFIER LPAREN opt_argument_list RPAREN
    (26) term -> . factor
    (27) term -> . term TIMES factor
    (28) term -> . term DIVIDE factor
    (29) factor -> . NUMBER
    (30) factor -> . float_literal
    (31) factor -> . string_literal
    (32) factor -> . IDENTIFIER
    (33) factor -> . LPAREN expression RPAREN
    (34) float_literal -> . FLOAT
    (36) string_literal -> . STRING

    LBRACE          shift and go to state 58
    DEF             shift and go to state 8
    IDENTIFIER      shift and go to state 9
    RETURN          shift and go to state 12
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 10
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    block                          shift and go to state 57
    statement                      shift and go to state 59
    function_definition            shift and go to state 4
    assignment_statement           shift and go to state 5
    expression_statement           shift and go to state 6
    return_statement               shift and go to state 7
    expression                     shift and go to state 11
    term                           shift and go to state 13
    factor                         shift and go to state 14
    float_literal                  shift and go to state 16
    string_literal                 shift and go to state 17

state 57

    (8) function_definition -> DEF IDENTIFIER LPAREN opt_parameter_list RPAREN COLON block .

    DEF             reduce using rule 8 (function_definition -> DEF IDENTIFIER LPAREN opt_parameter_list RPAREN COLON block .)
    IDENTIFIER      reduce using rule 8 (function_definition -> DEF IDENTIFIER LPAREN opt_parameter_list RPAREN COLON block .)
    RETURN          reduce using rule 8 (function_definition -> DEF IDENTIFIER LPAREN opt_parameter_list RPAREN COLON block .)
    NUMBER          reduce using rule 8 (function_definition -> DEF IDENTIFIER LPAREN opt_parameter_list RPAREN COLON block .)
    LPAREN          reduce using rule 8 (function_definition -> DEF IDENTIFIER LPAREN opt_parameter_list RPAREN COLON block .)
    FLOAT           reduce using rule 8 (function_definition -> DEF IDENTIFIER LPAREN opt_parameter_list RPAREN COLON block .)
    STRING          reduce using rule 8 (function_definition -> DEF IDENTIFIER LPAREN opt_parameter_list RPAREN COLON block .)
    $end            reduce using rule 8 (function_definition -> DEF IDENTIFIER LPAREN opt_parameter_list RPAREN COLON block .)
    RBRACE          reduce using rule 8 (function_definition -> DEF IDENTIFIER LPAREN opt_parameter_list RPAREN COLON block .)


state 58

    (10) block -> LBRACE . statements RBRACE
    (2) statements -> . statement
    (3) statements -> . statement statements
    (4) statement -> . function_definition
    (5) statement -> . assignment_statement
    (6) statement -> . expression_statement
    (7) statement -> . return_statement
    (8) function_definition -> . DEF IDENTIFIER LPAREN opt_parameter_list RPAREN COLON block
    (16) assignment_statement -> . IDENTIFIER EQUALS expression SEMICOLON
    (17) expression_statement -> . expression SEMICOLON
    (9) return_statement -> . RETURN expression SEMICOLON
    (18) expression -> . term
    (19) expression -> . expression PLUS term
    (20) expression -> . expression MINUS term
    (21) expression -> . IDENTIFIER LPAREN opt_argument_list RPAREN
    (26) term -> . factor
    (27) term -> . term TIMES factor
    (28) term -> . term DIVIDE factor
    (29) factor -> . NUMBER
    (30) factor -> . float_literal
    (31) factor -> . string_literal
    (32) factor -> . IDENTIFIER
    (33) factor -> . LPAREN expression RPAREN
    (34) float_literal -> . FLOAT
    (36) string_literal -> . STRING

    DEF             shift and go to state 8
    IDENTIFIER      shift and go to state 9
    RETURN          shift and go to state 12
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 10
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    statements                     shift and go to state 60
    statement                      shift and go to state 3
    function_definition            shift and go to state 4
    assignment_statement           shift and go to state 5
    expression_statement           shift and go to state 6
    return_statement               shift and go to state 7
    expression                     shift and go to state 11
    term                           shift and go to state 13
    factor                         shift and go to state 14
    float_literal                  shift and go to state 16
    string_literal                 shift and go to state 17

state 59

    (11) block -> statement .

    DEF             reduce using rule 11 (block -> statement .)
    IDENTIFIER      reduce using rule 11 (block -> statement .)
    RETURN          reduce using rule 11 (block -> statement .)
    NUMBER          reduce using rule 11 (block -> statement .)
    LPAREN          reduce using rule 11 (block -> statement .)
    FLOAT           reduce using rule 11 (block -> statement .)
    STRING          reduce using rule 11 (block -> statement .)
    $end            reduce using rule 11 (block -> statement .)
    RBRACE          reduce using rule 11 (block -> statement .)


state 60

    (10) block -> LBRACE statements . RBRACE

    RBRACE          shift and go to state 61


state 61

    (10) block -> LBRACE statements RBRACE .

    DEF             reduce using rule 10 (block -> LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 10 (block -> LBRACE statements RBRACE .)
    RETURN          reduce using rule 10 (block -> LBRACE statements RBRACE .)
    NUMBER          reduce using rule 10 (block -> LBRACE statements RBRACE .)
    LPAREN          reduce using rule 10 (block -> LBRACE statements RBRACE .)
    FLOAT           reduce using rule 10 (block -> LBRACE statements RBRACE .)
    STRING          reduce using rule 10 (block -> LBRACE statements RBRACE .)
    $end            reduce using rule 10 (block -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 10 (block -> LBRACE statements RBRACE .)

